{"version":3,"sources":["assets/audio/card.mp3","assets/audio/error.mp3","assets/audio/draw.mp3","assets/audio/loss.mp3","assets/audio/win.mp3","util/audio.ts","util/const.ts","util/cards.ts","components/Cards.js","util/contract.ts","components/ContractForm.js","util/format.ts","components/History.js","components/Error.js","components/Play.js","components/Footer.js","components/App.js","index.js"],"names":["audio","src","instance","Audio","volume","currentTime","play","card","_card","error","_error","draw","_draw","loss","_loss","win","_win","WEI","Suit","Results","Card","constructor","_value","_suit","this","toString","hearts","diamonds","clubs","spades","parse","cards","ret","Array","i","length","offset","encoded","changedToFlipped","changed","name","flipped","className","id","type","onChange","cardClick","htmlFor","value","Cards","map","Contract","web3","address","contract","balance","min","max","call","method","args","methods","from","send","event","eventName","gameId","callback","provider","events","filter","on","returnValues","off","BigInt","eth","getBalance","getGasPrice","game","playable","bet","finished","date","Date","timestamp","change","flag","Number","result","payout","getGames","start","Math","floor","random","Promise","success","fail","catch","startEvent","then","end","replace","endEvent","ContractForm","setError","setContract","first","setFirst","useState","loading","setLoading","async","handleCreateContract","window","contractAddress","ethereum","request","Web3","abi","Error","createContract","all","updateBalance","updateMin","updateMax","e","message","select","arg","toLowerCase","res","contracts","find","o","useEffect","onSubmit","preventDefault","FormData","target","get","defaultValue","spellCheck","style","width","formatNumber","amount","digits","formatEnd","str","slice","substr","padStart","pad2","History","page","unit","setUnit","pages","setPages","games","setGames","loaded","setLoaded","setChanged","load","getGame","some","interval","setInterval","clearInterval","console","warn","info","reverse","ceil","location","hash","disabled","log","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","href","Page","enabled","children","ALL_FLIPPED","fill","NONE_FLIPPED","Play","resume","useRef","cardsWrapper","active","setActive","playing","setPlaying","setBalance","undefined","setCards","setFlipped","setResult","ifActive","promise","updateImpl","update","data","match","padEnd","SyntaxError","toBigInt","previouslyFlipped","handleStart","finally","input","current","querySelectorAll","checked","handleEnd","index","best","ref","onClick","gas","Footer","v","join","rel","App","split","setPage","fn","addEventListener","removeEventListener","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9fa4e28b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/card.bad10dba.mp3\";","export default __webpack_public_path__ + \"static/media/error.0c2f182b.mp3\";","export default __webpack_public_path__ + \"static/media/draw.d1037966.mp3\";","export default __webpack_public_path__ + \"static/media/loss.76807f79.mp3\";","export default __webpack_public_path__ + \"static/media/win.8edc9ff0.mp3\";","import _card from \"../assets/audio/card.mp3\";\r\nimport _error from \"../assets/audio/error.mp3\";\r\nimport _draw from \"../assets/audio/draw.mp3\";\r\nimport _loss from \"../assets/audio/loss.mp3\";\r\nimport _win from \"../assets/audio/win.mp3\";\r\n\r\nfunction audio(src: string) {\r\n\tconst instance = new Audio(src);\r\n\treturn () => {\r\n\t\tinstance.volume = 1;\r\n\t\tinstance.currentTime = 0;\r\n\t\tinstance.play();\r\n\t};\r\n}\r\n\r\nexport const card = audio(_card);\r\n\r\nexport const error = audio(_error);\r\n\r\nexport const draw = audio(_draw);\r\n\r\nexport const loss = audio(_loss);\r\n\r\nexport const win = audio(_win);\r\n","export const WEI = 1000000000000000000n;\r\n\r\nexport enum Suit {\r\n\thearts = 0b000000,\r\n\tdiamonds = 0b010000,\r\n\tclubs = 0b100000,\r\n\tspades = 0b110000\r\n}\r\n\r\nexport const Results = [\r\n\t\"Jacks or better\",\r\n\t\"Two pair\",\r\n\t\"Three of a kind\",\r\n\t\"Straight\",\r\n\t\"Flush\",\r\n\t\"Full house\",\r\n\t\"Four of a kind\",\r\n\t\"Straight flush\",\r\n\t\"Royal flush\"\r\n];\r\n","import { Suit } from \"./const\";\r\n\r\nexport class Card {\r\n\r\n\tconstructor(private _value: number, private _suit: number) {}\r\n\r\n\tget value(): string {\r\n\t\tswitch(this._value) {\r\n\t\t\tcase 10: return \"J\";\r\n\t\t\tcase 11: return \"Q\";\r\n\t\t\tcase 12: return \"K\";\r\n\t\t\tcase 13: return \"A\";\r\n\t\t\tdefault: return (1 + this._value).toString();\r\n\t\t}\r\n\t}\r\n\r\n\tget className(): string {\r\n\t\tswitch(this._suit) {\r\n\t\t\tcase Suit.hearts: return \"hearts\";\r\n\t\t\tcase Suit.diamonds: return \"diamonds\";\r\n\t\t\tcase Suit.clubs: return \"clubs\";\r\n\t\t\tcase Suit.spades: return \"spades\";\r\n\t\t\tdefault: return \"\";\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\nexport function parse(cards: number): Card[] {\r\n\tconst ret = Array(5);\r\n\tfor(let i=0; i<ret.length; i++) {\r\n\t\tconst offset = i * 6;\r\n\t\tconst encoded = (cards & (0b111111 << offset)) >> offset;\r\n\t\tret[i] = new Card(encoded & 0b001111, encoded & 0b110000);\r\n\t}\r\n\treturn ret;\r\n}\r\n\r\nexport function changedToFlipped(changed: number) {\r\n\treturn [\r\n\t\t(changed & 16) !== 0,\r\n\t\t(changed & 8) !== 0,\r\n\t\t(changed & 4) !== 0,\r\n\t\t(changed & 2) !== 0,\r\n\t\t(changed & 1) !== 0\r\n\t];\r\n}\r\n","import { card as cardClick } from \"../util/audio\";\r\nimport { parse } from \"../util/cards\";\r\nimport \"../styles/cards.scss\";\r\n\r\nfunction Card({card, name, flipped = false}){\r\n\treturn <div className={flipped ? \"card flipped\" : \"card\"}>\r\n\t\t<input id={name} type=\"checkbox\" name={name} onChange={cardClick} />\r\n\t\t<label htmlFor={name} className={card.className}>\r\n\t\t\t<span className=\"value\">{card.value}</span>\r\n\t\t\t<span className=\"suit\" />\r\n\t\t</label>\r\n\t</div>\r\n}\r\n\r\nexport default function Cards({ cards, flipped = [] }) {\r\n\treturn <div className=\"cards-component\">\r\n\t\t{parse(cards).map((card, i) => <Card key={i} card={card} name={`card${i}`} flipped={flipped[i]} />)}\r\n\t</div>\r\n}\r\n","import Web3 from \"web3\";\r\nimport { Contract as Web3Contract, EventData } from \"web3-eth-contract\";\r\nimport { abi } from \"../contracts/Videopoker.json\";\r\n\r\ninterface Game {\r\n\tid: bigint;\r\n\tplayable: boolean;\r\n\tbet: bigint;\r\n\tresult?: number;\r\n\tpayout?: bigint;\r\n\tcards: number;\r\n\tfinished: boolean;\r\n\tchange?: number;\r\n\tdate: Date\r\n}\r\n\r\ninterface StartEvent {\r\n\tgameId: string;\r\n\tcards: string;\r\n}\r\n\r\ninterface EndEvent {\r\n\tgameId: string;\r\n\tcards: string;\r\n\tresult: string;\r\n\tpayout: string;\r\n}\r\n\r\n/**\r\n * Creates a random number to be used as game id.\r\n */\r\nfunction random(): bigint {\r\n\tlet value = 0n;\r\n\tfor(let i=0; i<8; i++) {\r\n\t\tvalue |= BigInt(Math.floor(Math.random() * 2147483648)) << BigInt(i * 31);\r\n\t}\r\n\treturn value;\r\n}\r\n\r\nexport class Contract {\r\n\r\n\tprivate balance = 0n;\r\n\tprivate min = 0n;\r\n\tprivate max = 0n;\r\n\r\n\tconstructor(private web3: Web3, private address: string, private contract: Web3Contract) {}\r\n\r\n\tcall(method: string, ...args: any) {\r\n\t\treturn this.contract.methods[method](...args).call({from: this.address});\r\n\t}\r\n\r\n\tsend(method: string, value: number | bigint, ...args: any) {\r\n\t\treturn this.contract.methods[method](...args).send({from: this.address, value: value.toString()});\r\n\t}\r\n\r\n\tevent<T>(eventName: string, gameId: bigint, callback: (values: T) => any) {\r\n\t\tconst provider = this.contract.events[eventName]({ filter: { gameId }}).on(\"data\", (event: EventData) => {\r\n\t\t\tcallback(event.returnValues as T);\r\n\t\t\tprovider.off(\"data\");\r\n\t\t});\r\n\t}\r\n\r\n\tasync updateBalance() {\r\n\t\treturn this.balance = BigInt(await this.web3.eth.getBalance(this.address));\r\n\t}\r\n\r\n\tasync updateMin() {\r\n\t\treturn this.min = BigInt(await this.call(\"getMinBet\"));\r\n\t}\r\n\r\n\tasync updateMax() {\r\n\t\treturn this.max = BigInt(await this.call(\"getMaxBet\"));\r\n\t}\r\n\r\n\tasync getGasPrice() {\r\n\t\treturn BigInt(await this.web3.eth.getGasPrice());\r\n\t}\r\n\r\n\tasync getGame(id: bigint | string): Promise<Game> {\r\n\t\tconst game = await this.call(\"getGame\", id);\r\n\t\tconst ret = {\r\n\t\t\tid,\r\n\t\t\tplayable: false,\r\n\t\t\tbet: BigInt(game.bet),\r\n\t\t\tcards: +game.cards,\r\n\t\t\tfinished: false,\r\n\t\t\tdate: new Date(game.timestamp * 1000)\r\n\t\t} as Game;\r\n\t\tif(ret.cards === 0) {\r\n\t\t\t// awaiting randomness at start\r\n\t\t\tret.change = 0b11111;\r\n\t\t} else {\r\n\t\t\tconst flag = (ret.bet & (0b11n << 254n)) >> 254n;\r\n\t\t\tif(flag === 0n) {\r\n\t\t\t\t// game started but not finished\r\n\t\t\t\tret.playable = true;\r\n\t\t\t\tret.bet &= (1n << 249n) - 1n;\r\n\t\t\t} else if(flag === 1n) {\r\n\t\t\t\t// awaiting randomness at end\r\n\t\t\t\tret.finished = true;\r\n\t\t\t\tret.change = Number((ret.bet & (0b11111n << 249n)) >> 249n);\r\n\t\t\t\tret.bet &= (1n << 249n) - 1n;\r\n\t\t\t} else {\r\n\t\t\t\t// ended\r\n\t\t\t\tret.finished = true;\r\n\t\t\t\tret.result = Number((ret.bet & (0b11111n << 249n)) >> 249n);\r\n\t\t\t\tret.payout = ret.bet & ((1n << 249n) - 1n);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn ret;\r\n\t}\r\n\r\n\tgetGames(): Promise<string[]> {\r\n\t\treturn this.call(\"getGames\", this.address);\r\n\t}\r\n\r\n\tstart(bet: bigint): Promise<StartEvent> {\r\n\t\tconst gameId = random();\r\n\t\treturn new Promise((success, fail) => {\r\n\t\t\tthis.send(\"start\", bet, gameId).catch(fail);\r\n\t\t\tthis.startEvent(gameId).then(success);\r\n\t\t});\r\n\t}\r\n\r\n\tstartEvent(gameId: bigint): Promise<StartEvent> {\r\n\t\treturn new Promise(success => {\r\n\t\t\tthis.event<StartEvent>(\"Start\", gameId, success);\r\n\t\t});\r\n\t}\r\n\r\n\tend(gameId: bigint, replace: number): Promise<EndEvent> {\r\n\t\treturn new Promise((success, fail) => {\r\n\t\t\tthis.send(\"end\", 0, gameId, replace).catch(fail);\r\n\t\t\tthis.endEvent(gameId).then(success);\r\n\t\t});\r\n\t}\r\n\r\n\tendEvent(gameId: bigint): Promise<EndEvent> {\r\n\t\treturn new Promise(success => {\r\n\t\t\tthis.event<EndEvent>(\"End\", gameId, success);\r\n\t\t});\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n *\r\n * @param {string} contractAddress\r\n * @returns {Promise<Contract>}\r\n */\r\nexport async function createContract(contractAddress: string) {\r\n\t// @ts-ignore\r\n\tconst eth = window.ethereum;\r\n\tif(eth) {\r\n\t\tconst [ address ] = await eth.request({ method: \"eth_requestAccounts\" });\r\n\t\tconst web3 = new Web3(eth);\r\n\t\t// @ts-ignore\r\n\t\tconst contract = new web3.eth.Contract(abi, contractAddress);\r\n\t\treturn new Contract(web3, address, contract);\r\n\t} else {\r\n\t\tthrow new Error(\"Could not detect wallet extension\");\r\n\t}\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport { createContract } from \"../util/contract\";\r\nimport contracts from \"../assets/contracts.json\";\r\n\r\nexport default function ContractForm({ address, setError, setContract }) {\r\n\r\n\tconst [ first, setFirst ] = useState(true);\r\n\tconst [ loading, setLoading ] = useState(false);\r\n\r\n\tasync function handleCreateContract(address) {\r\n\t\ttry {\r\n\t\t\tconst contract = window.contract = await createContract(address);\r\n\t\t\t// init balances before starting\r\n\t\t\tawait Promise.all([\r\n\t\t\t\tcontract.updateBalance(),\r\n\t\t\t\tcontract.updateMin(),\r\n\t\t\t\tcontract.updateMax()\r\n\t\t\t]);\r\n\t\t\treturn contract;\r\n\t\t} catch(e) {\r\n\t\t\tsetFirst(true);\r\n\t\t\tsetError(e.message || \"Could not load contract\");\r\n\t\t}\r\n\t}\r\n\r\n\tasync function select(arg) {\r\n\t\tconst address = arg.toLowerCase();\r\n\t\tsetError(null);\r\n\t\tsetContract(null);\r\n\t\tsetLoading(true);\r\n\t\tconst contract = await handleCreateContract(address);\r\n\t\tif(contract) {\r\n\t\t\tsetFirst(false);\r\n\t\t\t// check whether it is a well known contract\r\n\t\t\tconst res = setContract(contract, contracts.find(o => address === o.address) || { address });\r\n\t\t\tif(res instanceof Promise) {\r\n\t\t\t\tawait res;\r\n\t\t\t}\r\n\t\t}\r\n\t\tsetLoading(false);\r\n\t}\r\n\r\n\tfunction submit(event) {\r\n\t\tevent.preventDefault();\r\n\t\tif(!first) {\r\n\t\t\t//TODO confirm change\r\n\t\t}\r\n\t\tselect(new FormData(event.target).get(\"address\"));\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tif(address) {\r\n\t\t\tselect(address);\r\n\t\t}\r\n\t}, [address]);\r\n\r\n\treturn <form className=\"row force-margin\" onSubmit={submit}>\r\n\t\t<label htmlFor=\"input-contract\" className=\"label\">Contract</label>\r\n\t\t<div className=\"value group\">\r\n\t\t\t<input id=\"input-contract\" name=\"address\" defaultValue={address || contracts[0].address} spellCheck={false} />\r\n\t\t\t<button type=\"submit\" className={loading ? \"loading\" : \"\"} style={{width: \"8rem\"}}>{first ? \"Use\" : \"Change\"}</button>\r\n\t\t</div>\r\n\t</form>\r\n\r\n}\r\n","import { WEI } from \"./const\";\r\n\r\n/**\r\n * Parses a decimal number into a bigint.\r\n *\r\n * @throws {SyntaxError} When the input contains invalid characters or the format is invalid.\r\n */\r\nexport function toBigInt(value: string): bigint {\r\n\tconst match = value.match(/^(0|[1-9]\\d*)(?:\\.(\\d{1,18}))?$/);\r\n\tif(match) {\r\n\t\tif(match[2]) {\r\n\t\t\t// has a comma\r\n\t\t\treturn BigInt(match[1]) * WEI + BigInt(match[2].padEnd(18, \"0\"));\r\n\t\t} else {\r\n\t\t\treturn BigInt(value) * WEI;\r\n\t\t}\r\n\t} else {\r\n\t\tthrow new SyntaxError(\"Invalid number\");\r\n\t}\r\n}\r\n\r\n/**\r\n * Formats an integer used by the network into a decimal representation without\r\n * losing precision.\r\n */\r\nexport function formatNumber(amount: string | bigint, digits = 18): string {\r\n\tconst formatEnd = (str: string) => str.slice(0, digits).replace(/0+$/, \"\");\r\n\tconst str = amount.toString();\r\n\tif(str === \"0\") {\r\n\t\treturn str;\r\n\t} else if(str.length > 18) {\r\n\t\t// greater than 1 eth\r\n\t\tconst start = str.slice(0, -18);\r\n\t\tconst end = formatEnd(str.substr(str.length - 18));\r\n\t\treturn end === \"\" ? start : `${start}.${end}`;\r\n\t} else {\r\n\t\treturn `0.${formatEnd(str.padStart(18, \"0\"))}`\r\n\t}\r\n}\r\n\r\nexport function formatDate(date: Date): string {\r\n\tconst year = date.getFullYear().toString().padStart(4, \"0\");\r\n\tconst month = pad2(date.getMonth() + 1);\r\n\tconst day = pad2(date.getDate());\r\n\tconst hours = pad2(date.getHours());\r\n\tconst minutes = pad2(date.getMinutes());\r\n\tconst seconds = pad2(date.getSeconds());\r\n\treturn `${year}-${month}-${day} ${hours}:${minutes}:${seconds}`;\r\n}\r\n\r\nfunction pad2(value: number): string {\r\n\treturn value.toString().padStart(2, \"0\");\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport Cards from \"./Cards\";\r\nimport ContractForm from \"./ContractForm\";\r\nimport { changedToFlipped } from \"../util/cards\";\r\nimport { Results } from \"../util/const\";\r\nimport { formatDate, formatNumber } from \"../util/format\";\r\nimport \"../styles/history.scss\";\r\n\r\nexport default function History({ address = \"\", page = 1 }) {\r\n\r\n\tconst pageSize = 5;\r\n\r\n\tconst [ contract, setContract ] = useState(null);\r\n\tconst [ unit, setUnit ] = useState(\"\");\r\n\r\n\tconst [ pages, setPages ] = useState(null);\r\n\tconst [ games, setGames ] = useState(null);\r\n\tconst [ loaded, setLoaded ] = useState(null);\r\n\tconst [ changed, setChanged ] = useState(null);\r\n\r\n\tuseEffect(() => {\r\n\t\tif(contract && games) {\r\n\t\t\tload(contract, page - 1, games);\r\n\t\t}\r\n\t}, [page]);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst interval = setInterval(() => changed && load(contract, page - 1, games), 5000);\r\n\t\treturn () => clearInterval(interval);\r\n\t});\r\n\r\n\tasync function load(contract, page, games) {\r\n\t\t// load pages from games\r\n\t\tconst i = page * pageSize;\r\n\t\tconst loaded = await Promise.all(games.slice(i, i + pageSize).map(gameId => contract.getGame(gameId)));\r\n\t\tsetChanged(loaded.some(game => game.change > 0));\r\n\t\tsetLoaded(loaded);\r\n\t}\r\n\r\n\tfunction updateOrder(event) {\r\n\t\tconsole.log(event);\r\n\t}\r\n\r\n\tasync function initContract(contract, info) {\r\n\t\tif(contract) {\r\n\t\t\t// load history of played games\r\n\t\t\t//setGames(await contract.getGames());\r\n\t\t\tconst games = (await contract.getGames()).slice().reverse();\r\n\t\t\tsetGames(games);\r\n\t\t\tsetPages(Math.ceil(games.length / pageSize));\r\n\t\t\tsetUnit(info.unit || \"\");\r\n\t\t\tawait load(contract, page - 1, games);\r\n\t\t\t// update hash\r\n\t\t\twindow.location.hash = `#history/${info.address}/${page}`;\r\n\t\t} else {\r\n\t\t\tsetLoaded(null);\r\n\t\t\tsetGames(null);\r\n\t\t\tsetUnit(null);\r\n\t\t}\r\n\t\tsetContract(contract);\r\n\t}\r\n\r\n\treturn <div className=\"history-component\">\r\n\t\t<ContractForm address={address} setError={console.warn} setContract={initContract} />\r\n\t\t<div className=\"row\">\r\n\t\t\t<label id=\"input-order\" className=\"label\">Order by</label>\r\n\t\t\t<div className=\"value\">\r\n\t\t\t\t<select id=\"input-order\" disabled onChange={updateOrder}>\r\n\t\t\t\t\t<option value=\"desc\">Newest</option>\r\n\t\t\t\t\t<option value=\"asc\">Oldest</option>\r\n\t\t\t\t</select>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t{loaded && (loaded.length ? <>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div style={{width: \"100%\"}}>\r\n\t\t\t\t\t{loaded.map(game => <div key={game.id} className=\"history-component-game\">\r\n\t\t\t\t\t\t<div className=\"date\">{formatDate(game.date)}</div>\r\n\t\t\t\t\t\t<div className=\"results\">\r\n\t\t\t\t\t\t\t<fieldset className=\"cards\" disabled>\r\n\t\t\t\t\t\t\t\t<Cards cards={game.cards} flipped={changedToFlipped(game.change || 0)} />\r\n\t\t\t\t\t\t\t</fieldset>\r\n\t\t\t\t\t\t\t<div className=\"result\">\r\n\t\t\t\t\t\t\t\t{game.playable || game.change > 0 ? <a href={`/#play/${address}/${game.id}`}>\r\n\t\t\t\t\t\t\t\t\t<button type=\"button\">Resume</button>\r\n\t\t\t\t\t\t\t\t</a> : game.result ? <>\r\n\t\t\t\t\t\t\t\t\t<div>{Results[game.result - 1]}</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"amount\">{formatNumber(game.payout, 8)} {unit}</div>\r\n\t\t\t\t\t\t\t\t</> : \"\"}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>)}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row history-component-footer\">\r\n\t\t\t\t<span>Page {page} of {pages}</span>\r\n\t\t\t\t<div className=\"spacer\" />\r\n\t\t\t\t<Page enabled={page > 1 && pages > 1} href={`#history/${address}/${page - 1}`}>&lsaquo;</Page>\r\n\t\t\t\t<Page enabled={page < pages} href={`#history/${address}/${+page + 1}`}>&rsaquo;</Page>\r\n\t\t\t</div>\r\n\t\t</> : <div className=\"history-component-empty\">You haven't played any games yet</div>)}\r\n\t</div>\r\n\r\n}\r\n\r\nfunction Page({ enabled, href, children }) {\r\n\tif(enabled) {\r\n\t\treturn <a className=\"nav\" href={href}><button>{children}</button></a>\r\n\t} else {\r\n\t\treturn <button className=\"nav\" disabled>{children}</button>\r\n\t}\r\n}\r\n","import \"../styles/error.scss\";\r\n\r\nexport default function Error({ error }) {\r\n\treturn <div className=\"error-component\">{ error }</div>\r\n}\r\n","import { useEffect, useRef, useState } from \"react\";\r\nimport Cards from \"./Cards\";\r\nimport ContractForm from \"./ContractForm\";\r\nimport * as audio from \"../util/audio\";\r\nimport { changedToFlipped } from \"../util/cards\";\r\nimport { Results } from \"../util/const\";\r\nimport { toBigInt, formatNumber } from \"../util/format\";\r\nimport \"../styles/play.scss\";\r\nimport Error from \"./Error\";\r\n\r\nconst ALL_FLIPPED = Array(5).fill(true);\r\nconst NONE_FLIPPED = Array(5).fill(false);\r\n\r\n/**\r\n * @param {string} address\r\n * @param {number} resume\r\n * @returns {JSX.Element}\r\n */\r\nexport default function Play({ address, resume }) {\r\n\r\n\tconst bet = useRef();\r\n\tconst cardsWrapper = useRef();\r\n\r\n\tconst [ active, setActive ] = useState(true);\r\n\r\n\tconst [ contract, setContract ] = useState(null);\r\n\r\n\tconst [ playing, setPlaying ] = useState(null);\r\n\tconst [ loading, setLoading ] = useState(false);\r\n\r\n\tconst [ unit, setUnit ] = useState(\"\");\r\n\tconst [ balance, setBalance ] = useState(undefined);\r\n\r\n\tconst [ cards, setCards ] = useState(0);\r\n\tconst [ flipped, setFlipped ] = useState(ALL_FLIPPED);\r\n\r\n\tconst [ result, setResult ] = useState(null);\r\n\tconst [ error, setError ] = useState(null);\r\n\r\n\tconst [ id ] = useState(Math.random());\r\n\r\n\tuseEffect(() => {\r\n\t\treturn () => setActive(false);\r\n\t}, []);\r\n\r\n\tasync function ifActive(promise) {\r\n\t\tawait promise;\r\n\t\tif(!active) {\r\n\t\t\tthrow new Error(\"Component is no longer active\");\r\n\t\t}\r\n\t\treturn promise;\r\n\t}\r\n\r\n\tfunction updateImpl(contract) {\r\n\t\treturn Promise.all([\r\n\t\t\tcontract.updateBalance().then(value => {\r\n\t\t\t\tsetBalance(value);\r\n\t\t\t\treturn value;\r\n\t\t\t}),\r\n\t\t\tcontract.updateMin(),\r\n\t\t\tcontract.updateMax()\r\n\t\t]);\r\n\t}\r\n\r\n\tfunction update() {\r\n\t\treturn updateImpl(contract);\r\n\t}\r\n\r\n\tasync function initContract(contract, info) {\r\n\t\tif(contract) {\r\n\t\t\tawait ifActive(updateImpl(contract));\r\n\t\t\tconst { unit } = info;\r\n\t\t\tsetUnit(unit || \"\");\r\n\t\t\t//TODO convert prices with coingecko API\r\n\t\t\t// calculate optimal bet\r\n\t\t\tlet best = contract.balance / 10n;\r\n\t\t\tif(best > contract.max) best = contract.max;\r\n\t\t\telse if(best < contract.min) best = contract.min;\r\n\t\t\tbet.current.value = formatNumber(best, 5);\r\n\t\t\t// update hash\r\n\t\t\twindow.location.hash = `#play/${info.address}`;\r\n\t\t\t// resume game\r\n\t\t\tif(resume) {\r\n\t\t\t\tconst game = await ifActive(contract.getGame(resume));\r\n\t\t\t\tconst change = game.change > 0;\r\n\t\t\t\tif(game.playable || change) {\r\n\t\t\t\t\tbet.current.value = formatNumber(game.bet);\r\n\t\t\t\t\tsetCards(game.cards);\r\n\t\t\t\t\tsetPlaying(game.id);\r\n\t\t\t\t\tif(change) {\r\n\t\t\t\t\t\tsetFlipped(changedToFlipped(game.change));\r\n\t\t\t\t\t\tsetLoading(true); // mark game as started\r\n\t\t\t\t\t\tif(!game.finished) {\r\n\t\t\t\t\t\t\thandleStart(game.bet, contract.startEvent(game.id));\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\thandleEnd(contract.endEvent(game.id));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tsetFlipped(NONE_FLIPPED);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tbet.current.value = \"\";\r\n\t\t}\r\n\t\tsetContract(contract);\r\n\t}\r\n\r\n\tasync function setMinBet() {\r\n\t\tawait update();\r\n\t\tbet.current.value = formatNumber(contract.min);\r\n\t}\r\n\r\n\tasync function setMaxBet() {\r\n\t\tconst [ gas ] = await Promise.all([contract.getGasPrice(), update()]);\r\n\t\tconst balance = contract.balance - gas * 310000n;\r\n\t\tbet.current.value = formatNumber(contract.max < balance ? contract.max : balance);\r\n\t}\r\n\r\n\tasync function start(data) {\r\n\t\tconst bet = toBigInt(data.get(\"bet\"));\r\n\t\tawait ifActive(update());\r\n\t\tif(bet > contract.max) {\r\n\t\t\tthrow new Error(\"Bet too high\");\r\n\t\t} else if(bet < contract.min) {\r\n\t\t\tthrow new Error(\"Bet too low\");\r\n\t\t} else if(bet > contract.balance) {\r\n\t\t\tthrow new Error(\"Insufficient balance\");\r\n\t\t} else {\r\n\t\t\tconst previouslyFlipped = flipped;\r\n\t\t\tsetFlipped(ALL_FLIPPED);\r\n\t\t\tsetResult(null);\r\n\t\t\tawait handleStart(bet, contract.start(bet).finally(() => {\r\n\t\t\t\tif(active) {\r\n\t\t\t\t\t// restore to previous game in case of cancel/fail\r\n\t\t\t\t\tsetFlipped(previouslyFlipped);\r\n\t\t\t\t}\r\n\t\t\t}));\r\n\t\t}\r\n\t}\r\n\r\n\tasync function handleStart(bet, promise) {\r\n\t\tconst { gameId, cards } = await ifActive(promise);\r\n\t\t// make sure no cards are selected\r\n\t\tfor(const input of cardsWrapper.current.querySelectorAll(\":checked\")) {\r\n\t\t\tinput.checked = false;\r\n\t\t}\r\n\t\tsetCards(cards);\r\n\t\tsetFlipped(NONE_FLIPPED);\r\n\t\tsetBalance(balance - bet);\r\n\t\tsetPlaying(gameId);\r\n\t\tsetLoading(false);\r\n\t\taudio.draw();\r\n\t}\r\n\r\n\tasync function end(data) {\r\n\t\tlet replace = 0;\r\n\t\tconst flipped = [];\r\n\t\tfor(let i=0; i<5; i++) {\r\n\t\t\tif(!data.get(\"card\" + i)) {\r\n\t\t\t\treplace |= 1 << i;\r\n\t\t\t\tflipped[i] = 1;\r\n\t\t\t}\r\n\t\t}\r\n\t\tsetFlipped(flipped);\r\n\t\tawait handleEnd(contract.end(playing, replace).finally(() => {\r\n\t\t\t// all cards must be visible again when the transaction ends, is cancelled or fails\r\n\t\t\tsetFlipped(NONE_FLIPPED);\r\n\t\t}));\r\n\t}\r\n\r\n\tasync function handleEnd(promise) {\r\n\t\tconst { cards, result, payout } = await ifActive(promise);\r\n\t\tconst index = +result;\r\n\t\tif(index) {\r\n\t\t\tif(payout > 0) {\r\n\t\t\t\t// update balance\r\n\t\t\t\tsetBalance(balance + BigInt(payout));\r\n\t\t\t}\r\n\t\t\tsetResult({ index, payout });\r\n\t\t\taudio.win();\r\n\t\t} else {\r\n\t\t\tsetResult(null);\r\n\t\t\taudio.loss();\r\n\t\t}\r\n\t\tsetCards(Number(BigInt(cards) & 68719476735n)); //FIXME fix event in solidity\r\n\t\tsetFlipped(NONE_FLIPPED);\r\n\t\tsetPlaying(null);\r\n\t\tsetLoading(false);\r\n\t}\r\n\r\n\tasync function submit(event) {\r\n\t\tevent.preventDefault();\r\n\t\tsetError(null);\r\n\t\tsetLoading(true);\r\n\t\ttry {\r\n\t\t\tawait (playing ? end : start)(new FormData(event.target));\r\n\t\t} catch(e) {\r\n\t\t\tif(active) {\r\n\t\t\t\tsetError(e.message);\r\n\t\t\t\taudio.error();\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t} else {\r\n\t\t\t\tconsole.warn(\"Error thrown on inactive component\", e);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tif(contract) {\r\n\t\t\tconst interval = setInterval(update, 30000);\r\n\t\t\treturn () => clearInterval(interval);\r\n\t\t}\r\n\t}, [contract]);\r\n\r\n\treturn <div className=\"play-component\">\r\n\t\t<ContractForm address={address} setError={setError} setContract={initContract} />\r\n\t\t<form onSubmit={submit}>\r\n\t\t\t<fieldset disabled={loading || !contract}>\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t<label htmlFor=\"input-balance\" className=\"label\">Balance</label>\r\n\t\t\t\t\t<div className=\"value\">\r\n\t\t\t\t\t\t<input id=\"input-balance\" disabled={true} value={balance >= 0n ? `${formatNumber(balance)} ${unit}` : \"\"} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t<label htmlFor=\"input-bet\" className=\"label\">Bet</label>\r\n\t\t\t\t\t<fieldset className=\"value group\" disabled={!!playing}>\r\n\t\t\t\t\t\t<input ref={bet} id=\"input-bet\" name=\"bet\" spellCheck={false} />\r\n\t\t\t\t\t\t<button type=\"button\" onClick={setMinBet}>Min</button>\r\n\t\t\t\t\t\t<button type=\"button\" onClick={setMaxBet}>Max</button>\r\n\t\t\t\t\t</fieldset>\r\n\t\t\t\t</div>\r\n\t\t\t\t<fieldset ref={cardsWrapper} className=\"row play-component-cards\" disabled={!playing}>\r\n\t\t\t\t\t<Cards cards={cards} flipped={flipped} />\r\n\t\t\t\t</fieldset>\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t<button type=\"submit\" className={`play-component-play-button${loading ? \" loading\" : \"\"}`}>\r\n\t\t\t\t\t\t{playing ? \"Draw\" : \"Deal\"}\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t{result && <div className=\"row\">\r\n\t\t\t\t\t<div className=\"play-component-result\">\r\n\t\t\t\t\t\t<div>{Results[result.index - 1]}</div>\r\n\t\t\t\t\t\t<div className=\"amount\">+{formatNumber(result.payout)} {unit}</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>}\r\n\t\t\t\t{error && <div className=\"row\"><Error error={error} /></div>}\r\n\t\t\t</fieldset>\r\n\t\t</form>\r\n\t</div>\r\n\r\n}\r\n","import \"../styles/footer.scss\";\r\n\r\nexport default function Footer({ address }) {\r\n\r\n\tconst ref = (name, address, ...args) => `#${name}${address ? [address, ...args].map(v => \"/\" + v).join(\"\") : \"\"}`;\r\n\r\n\treturn <div className=\"footer-component\">\r\n\t\t<div className=\"links\">\r\n\t\t\t<a href={ref(\"play\", address)}>Play</a>\r\n\t\t\t<a href={ref(\"history\", address, \"1\")}>History</a>\r\n\t\t\t<a href=\"#howtoplay\">How to play</a>\r\n\t\t\t<a href=\"https://github.com/Kripth/videopoker-dapp\" target=\"_blank\" rel=\"noreferrer\">GitHub</a>\r\n\t\t</div>\r\n\t\t<div className=\"suits\">\r\n\t\t\t<div className=\"suit hearts\" />\r\n\t\t\t<div className=\"suit spades\" />\r\n\t\t\t<div className=\"suit diamonds\" />\r\n\t\t\t<div className=\"suit clubs\" />\r\n\t\t</div>\r\n\t</div>\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport History from \"./History\";\r\nimport Play from \"./Play\";\r\nimport Footer from \"./Footer\";\r\nimport \"../styles/app.scss\";\r\n\r\nexport default function App() {\r\n\r\n\tfunction parse() {\r\n\t\treturn window.location.hash.substr(1).split(\"/\");\r\n\t}\r\n\r\n\tconst [ page, setPage ] = useState(parse());\r\n\r\n\tuseEffect(() => {\r\n\t\tconst fn = () => setPage(parse());\r\n\t\twindow.addEventListener(\"hashchange\", fn);\r\n\t\treturn () => window.removeEventListener(\"hashchange\", fn);\r\n\t});\r\n\r\n\treturn <div className=\"app-component\">\r\n\t\t<div className=\"app-component-title\">videopoker-dapp</div>\r\n\t\t<div className=\"app-component-content\">\r\n\t\t\t{page[0] === \"history\" ?\r\n\t\t\t\t<History address={page[1]} page={page[2]} /> :\r\n\t\t\t\t<Play address={page[1]} resume={page[2]} />}\r\n\t\t</div>\r\n\t\t<Footer address={page[1]} />\r\n\t</div>\r\n\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./styles/common.scss\";\r\nimport App from \"./components/App\";\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<App />\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}