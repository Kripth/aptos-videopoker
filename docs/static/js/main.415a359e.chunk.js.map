{"version":3,"sources":["components/Card.js","components/Cards.js","util/const.js","util/contract.js","components/ContractForm.js","util/util.js","components/History.js","components/Play.js","components/Footer.js","App.js","index.js"],"names":["values","classNames","Card","index","value","flipped","type","number","name","className","id","htmlFor","parse","cards","Array","fill","map","_","i","offset","Cards","WEI","Results","Contract","constructor","web3","address","contract","this","call","method","args","methods","from","send","event","eventName","callback","provider","events","filter","gameId","on","returnValues","off","balance","eth","getBalance","min","max","deposit","amount","bet","deck","playable","BigInt","result","Number","payout","getGames","start","Math","floor","random","Promise","success","fail","catch","end","replace","ContractForm","setError","setContract","first","setFirst","useState","loading","setLoading","async","select","arg","toLowerCase","contractAddress","window","ethereum","Web3","getAccounts","json","createContract","all","updateBalance","updateMin","updateMax","res","contracts","find","o","useEffect","onSubmit","preventDefault","FormData","target","get","defaultValue","spellCheck","style","width","format","maxLength","toString","padStart","substr","History","page","unit","setUnit","pages","setPages","games","setGames","loaded","setLoaded","load","slice","getGame","console","warn","info","reverse","ceil","length","history","replaceState","disabled","onChange","log","game","href","flexGrow","Play","resume","useRef","playing","setPlaying","setBalance","undefined","setMin","setMax","setCards","setFlipped","setResult","error","updateImpl","then","update","data","finally","interval","setInterval","clearInterval","coingecko","best","current","e","receipt","message","ref","step","onClick","Footer","App","location","hash","split","setPage","fn","addEventListener","removeEventListener","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.415a359e.chunk.js","sourcesContent":["const JACK = 9;\nconst QUEEN = 10;\nconst KING = 11;\nconst ACE = 12;\n\nconst values = {\n\t[JACK]: \"J\",\n\t[QUEEN]: \"Q\",\n\t[KING]: \"K\",\n\t[ACE]: \"A\"\n};\n\nconst HEARTS = 0b000000;\nconst DIAMONDS = 0b010000;\nconst CLUBS = 0b100000;\nconst SPADES = 0b110000;\n\nconst classNames = {\n\t[HEARTS]: \"hearts\",\n\t[DIAMONDS]: \"diamonds\",\n\t[CLUBS]: \"clubs\",\n\t[SPADES]: \"spades\",\n};\n\nexport default function Card({index, value, flipped = false}){\n\n\tconst type = value & 0b110000;\n\tconst number = value & 0b001111;\n\n\tconst name = `card${index}`;\n\n\treturn <div className={flipped ? \"card flipped\" : \"card\"}>\n\t\t<input id={name} type=\"checkbox\" name={name} />\n\t\t<label htmlFor={name} className={classNames[type]}>\n\t\t\t<span className=\"value\">{values[number] || (2 + number)}</span>\n\t\t\t<span className=\"suit\" />\n\t\t</label>\n\t</div>\n\n}\n","import Card from \"./Card\";\n\n/**\n * @param {number} cards\n * @returns {number[]}\n */\nexport function parse(cards) {\n\treturn Array(5).fill().map((_, i) => {\n\t\tconst offset = i * 6;\n\t\treturn (cards & (0b111111 << offset)) >> offset;\n\t});\n}\n\nexport default function Cards({cards}) {\n\treturn <div className=\"cards\">\n\t\t{parse(cards).map((value, i) => <Card key={i} index={i} value={value} />)}\n\t</div>\n}\n","export const WEI = 1000000000000000000;\n\nexport const Results = [\n\t\"Jacks or better\",\n\t\"Two pair\",\n\t\"Three of a kind\",\n\t\"Straight\",\n\t\"Flush\",\n\t\"Full house\",\n\t\"Four of a kind\",\n\t\"Straight flush\",\n\t\"Royal flush\"\n];\n","/* global BigInt */\nimport Web3 from \"web3\";\nimport json from \"../assets/abi.json\";\nimport { WEI } from \"./const\";\n\nfunction random() {\n\tlet value = 0n;\n\tfor(let i=0; i<8; i++) {\n\t\tvalue |= BigInt(Math.floor(Math.random() * 2147483648)) << BigInt(i * 31);\n\t}\n\treturn value;\n}\n\nexport class Contract {\n\n\t/**\n\t * @param {Web3} web3\n\t * @param {string} address\n\t * @param contract\n\t */\n\tconstructor(web3, address, contract) {\n\t\tthis.web3 = web3;\n\t\tthis.address = address;\n\t\tthis.contract = contract;\n\t\t//this.contract.events.allEvents({toBlock: 'latest'}, console.log);\n\t}\n\n\tcall(method, ...args) {\n\t\treturn this.contract.methods[method](...args).call({from: this.address});\n\t}\n\n\tsend(method, value, ...args) {\n\t\treturn this.contract.methods[method](...args).send({from: this.address, value});\n\t}\n\n\t/**\n\t * @param {string} eventName\n\t * @param {function} callback\n\t */\n\tevent(eventName, callback) {\n\t\tconst provider = this.contract.events[eventName]({filter: {gameId: this.gameId}}).on(\"data\", event => {\n\t\t\tcallback(event.returnValues);\n\t\t\tprovider.off(\"data\");\n\t\t});\n\t}\n\n\tasync updateBalance() {\n\t\treturn this.balance = await this.web3.eth.getBalance(this.address);\n\t}\n\n\tasync updateMin() {\n\t\treturn this.min = +(await this.call(\"getMinBet\"));\n\t}\n\n\tasync updateMax() {\n\t\treturn this.max = +(await this.call(\"getMaxBet\"));\n\t}\n\n\tdeposit(amount) {\n\t\treturn this.send(\"deposit\", amount * WEI);\n\t}\n\n\tasync getGame(id) {\n\t\tconst { bet, deck, cards } = await this.call(\"getGame\", id);\n\t\tif(+deck) {\n\t\t\t// game is still playable\n\t\t\treturn {\n\t\t\t\tid,\n\t\t\t\tplayable: true,\n\t\t\t\tbet: BigInt(bet),\n\t\t\t\tcards\n\t\t\t};\n\t\t} else {\n\t\t\t// game has ended\n\t\t\tconst result = BigInt(bet);\n\t\t\treturn {\n\t\t\t\tid,\n\t\t\t\tresult: Number(result >> 252n),\n\t\t\t\tpayout: result & (2n ** 252n - 1n),\n\t\t\t\tcards\n\t\t\t};\n\t\t}\n\t}\n\n\tgetGames() {\n\t\treturn this.call(\"getGames\", this.address);\n\t}\n\n\t/**\n\t * @param {number} bet\n\t * @returns {Promise<{bet, cards}>}\n\t */\n\tstart(bet) {\n\t\tconst gameId = this.gameId = random();\n\t\treturn new Promise((success, fail) => {\n\t\t\tthis.send(\"start\", bet, gameId).catch(fail);\n\t\t\tthis.event(\"Start\", success);\n\t\t});\n\t}\n\n\t/**\n\t * @param {number} replace\n\t * @returns {Promise<{cards, result, payout}>}\n\t */\n\tend(replace) {\n\t\treturn new Promise((success, fail) => {\n\t\t\tthis.send(\"end\", 0, this.gameId, replace).catch(fail);\n\t\t\tthis.event(\"End\", success);\n\t\t});\n\t}\n\n}\n\n/**\n *\n * @param {string} contractAddress\n * @returns {Promise<Contract> | undefined}\n */\nexport async function createContract(contractAddress) {\n\tconst eth = window.ethereum;\n\tif(eth) {\n\t\tawait eth.send(\"eth_requestAccounts\");\n\t\tconst web3 = new Web3(eth);\n\t\t//console.log(await web3.eth.net.getId());\n\t\tconst [ address ] = await web3.eth.getAccounts();\n\t\tconst contract = new web3.eth.Contract(json, contractAddress);\n\t\treturn new Contract(web3, address, contract);\n\t}\n}\n","import {useEffect, useState} from \"react\";\nimport { createContract } from \"../util/contract\";\nimport contracts from \"../assets/contracts.json\";\n\nexport default function ContractForm({ address, setError, setContract }) {\n\n\tconst [ first, setFirst ] = useState(true);\n\tconst [ loading, setLoading ] = useState(false);\n\n\tasync function select(arg) {\n\t\tconst address = arg.toLowerCase();\n\t\tsetError(null);\n\t\tsetContract(null);\n\t\tsetLoading(true);\n\t\tconst contract = await createContract(address);\n\t\tif(contract) {\n\t\t\twindow.contract = contract;\n\t\t\t// init balances before starting\n\t\t\tawait Promise.all([\n\t\t\t\tcontract.updateBalance(),\n\t\t\t\tcontract.updateMin(),\n\t\t\t\tcontract.updateMax()\n\t\t\t]);\n\t\t\tsetFirst(false);\n\t\t\t// check whether it is a well known contract\n\t\t\tconst res = setContract(contract, contracts.find(o => address === o.address) || {address});\n\t\t\tif(res instanceof Promise) {\n\t\t\t\tawait res;\n\t\t\t}\n\t\t} else {\n\t\t\tsetFirst(true);\n\t\t\tsetError(\"Could not load contract\");\n\t\t}\n\t\tsetLoading(false);\n\t}\n\n\tfunction submit(event) {\n\t\tevent.preventDefault();\n\t\tif(!first) {\n\t\t\t//TODO confirm change\n\t\t}\n\t\tselect(new FormData(event.target).get(\"address\"));\n\t}\n\n\tuseEffect(() => {\n\t\tif(address) {\n\t\t\tselect(address);\n\t\t}\n\t}, [address]);\n\n\treturn <form className=\"row force-margin\" onSubmit={submit}>\n\t\t<label className=\"label\">Contract</label>\n\t\t<div className=\"value group\">\n\t\t\t<input name=\"address\" defaultValue={address || contracts[0].address} spellCheck={false} />\n\t\t\t<button type=\"submit\" className={loading ? \"loading\" : \"\"} style={{width: \"8rem\"}}>{first ? \"Use\" : \"Change\"}</button>\n\t\t</div>\n\t</form>\n\n}\n","import { WEI } from \"./const\";\n\nexport function format(amount, maxLength = 18) {\n\tif(amount > WEI) {\n\t\t// greater than 0\n\t\treturn amount / WEI;\n\t} else {\n\t\tlet str = amount.toString()\n\t\t\t.padStart(maxLength, \"0\")\n\t\t\t.replace(/0+$/, \"\")\n\t\t\t.substr(0, maxLength);\n\t\treturn `0.${str}`;\n\t}\n}\n","import { useEffect, useState } from \"react\";\nimport Cards from \"./Cards\";\nimport ContractForm from \"./ContractForm\";\nimport { Results } from \"../util/const\";\nimport { format } from \"../util/util\";\n\nexport default function History({ address = \"\", page = 1 }) {\n\n\tconst pageSize = 5;\n\n\tconst [ contract, setContract ] = useState(null);\n\tconst [ unit, setUnit ] = useState(\"\");\n\n\tconst [ pages, setPages ] = useState(null);\n\tconst [ games, setGames ] = useState(null);\n\tconst [ loaded, setLoaded ] = useState(null);\n\n\tuseEffect(() => {\n\t\tif(contract && games) {\n\t\t\tload(contract, page - 1, games);\n\t\t}\n\t}, [page]);\n\n\tasync function load(contract, page, games) {\n\t\t// load pages from games\n\t\tconst i = page * pageSize;\n\t\tsetLoaded(await Promise.all(games.slice(i, i + pageSize).map(gameId => contract.getGame(gameId))));\n\t}\n\n\tfunction updateOrder(event) {\n\t\tconsole.log(event);\n\t}\n\n\tasync function initContract(contract, info) {\n\t\tif(contract) {\n\t\t\t// load history of played games\n\t\t\t//setGames(await contract.getGames());\n\t\t\tconst games = (await contract.getGames()).slice().reverse();\n\t\t\tsetGames(games);\n\t\t\tsetPages(Math.ceil(games.length / pageSize));\n\t\t\tsetUnit(info.unit || \"\");\n\t\t\tawait load(contract, page - 1, games);\n\t\t\t// update hash\n\t\t\twindow.history.replaceState({}, \"\", `#history/${info.address}/${page}`);\n\t\t} else {\n\t\t\tsetLoaded(null);\n\t\t\tsetGames(null);\n\t\t\tsetUnit(null);\n\t\t}\n\t\tsetContract(contract);\n\t}\n\n\treturn <>\n\t\t<ContractForm address={address} setError={console.warn} setContract={initContract} />\n\t\t<div className=\"row\">\n\t\t\t<label className=\"label\">Order by</label>\n\t\t\t<div className=\"value\">\n\t\t\t\t<select disabled onChange={updateOrder}>\n\t\t\t\t\t<option value=\"desc\">Newest</option>\n\t\t\t\t\t<option value=\"asc\">Oldest</option>\n\t\t\t\t</select>\n\t\t\t</div>\n\t\t</div>\n\t\t{loaded && <>\n\t\t\t<div className=\"row\">\n\t\t\t\t<table className=\"history\">\n\t\t\t\t\t<thead>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<th>Cards</th>\n\t\t\t\t\t\t\t<th>Result</th>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</thead>\n\t\t\t\t\t<tbody>\n\t\t\t\t\t\t{loaded.map(game => <tr key={game.id}>\n\t\t\t\t\t\t\t<td><fieldset disabled><Cards cards={game.cards} /></fieldset></td>\n\t\t\t\t\t\t\t<td className=\"result\">\n\t\t\t\t\t\t\t\t{game.playable ? <a href={`/#play/${address}/${game.id}`}>\n\t\t\t\t\t\t\t\t\t<button type=\"button\">Resume</button>\n\t\t\t\t\t\t\t\t</a> : game.result ? <>\n\t\t\t\t\t\t\t\t\t<div>{Results[game.result - 1]}</div>\n\t\t\t\t\t\t\t\t\t<div>{format(game.payout, 10)} {unit}</div>\n\t\t\t\t\t\t\t\t</> : \"\"}\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t</tr>)}\n\t\t\t\t\t</tbody>\n\t\t\t\t</table>\n\t\t\t</div>\n\t\t\t<div className=\"row history-footer\">\n\t\t\t\t<span>Page {page} of {pages}</span>\n\t\t\t\t<div style={{flexGrow: 1}} />\n\t\t\t\t{page > 1 && pages > 1 && <a href={`#history/${address}/${page - 1}`}><button>Previous</button></a>}\n\t\t\t\t{page < pages && <a href={`#history/${address}/${+page + 1}`}><button>Next</button></a>}\n\t\t\t</div>\n\t\t</>}\n\t</>\n\n}\n","import { useEffect, useRef, useState } from \"react\";\nimport Card from \"./Card\";\nimport { parse } from \"./Cards\";\nimport ContractForm from \"./ContractForm\";\nimport { WEI, Results } from \"../util/const\";\nimport { format } from \"../util/util\";\n\n/**\n * @param {string} address\n * @param {number} resume\n * @returns {JSX.Element}\n */\nexport default function Play({ address, resume }) {\n\n\tconst bet = useRef();\n\n\tconst [ contract, setContract ] = useState(null);\n\n\tconst [ playing, setPlaying ] = useState(false);\n\tconst [ loading, setLoading ] = useState(false);\n\n\tconst [ unit, setUnit ] = useState(\"\");\n\tconst [ balance, setBalance ] = useState(undefined);\n\tconst [ min, setMin ] = useState(0);\n\tconst [ max, setMax ] = useState(0);\n\n\tconst [ cards, setCards ] = useState(null);\n\tconst [ flipped, setFlipped ] = useState([]);\n\n\tconst [ result, setResult ] = useState(null);\n\tconst [ error, setError ] = useState(null);\n\n\tfunction updateImpl(contract) {\n\t\treturn Promise.all([\n\t\t\tcontract.updateBalance().then(setBalance),\n\t\t\tcontract.updateMin().then(setMin),\n\t\t\tcontract.updateMax().then(setMax)\n\t\t]);\n\t}\n\n\tfunction update() {\n\t\treturn updateImpl(contract);\n\t}\n\n\tuseEffect(() => {\n\t\tconst interval = setInterval(() => contract && update(), 30000);\n\t\treturn () => clearInterval(interval);\n\t}, []);\n\n\tasync function initContract(contract, info) {\n\t\tif(contract) {\n\t\t\tawait updateImpl(contract);\n\t\t\tconst { unit, coingecko } = info;\n\t\t\tsetUnit(unit || \"\");\n\t\t\t//TODO convert prices with coingecko API\n\t\t\t// calculate optimal bet\n\t\t\tconst best = Math.min(Math.max(contract.balance / 10, contract.min), contract.max);\n\t\t\tbet.current.value = best / WEI;\n\t\t\t// update hash\n\t\t\twindow.history.replaceState({}, \"\", `#play/${info.address}`);\n\t\t\t// resume game\n\t\t\tif(resume) {\n\t\t\t\tconst game = await contract.getGame(resume);\n\t\t\t\tif(game.playable) {\n\t\t\t\t\tcontract.gameId = game.id;\n\t\t\t\t\tbet.current.value = format(game.bet);\n\t\t\t\t\tsetCards(game.cards);\n\t\t\t\t\tsetPlaying(true);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tbet.current.value = \"\";\n\t\t}\n\t\tsetContract(contract);\n\t}\n\n\tasync function setMinBet() {\n\t\tawait update();\n\t\tbet.current.value = format(contract.min);\n\t}\n\n\tasync function setMaxBet() {\n\t\tawait update();\n\t\tbet.current.value = format(Math.min(contract.max, contract.balance));\n\t}\n\n\tasync function start(data) {\n\t\tconst bet = Math.floor(data.get(\"bet\") * WEI);\n\t\tawait update();\n\t\tif(bet > contract.max) {\n\t\t\tsetError(\"Bet too high\");\n\t\t} else if(bet < contract.min) {\n\t\t\tsetError(\"Bet too low\");\n\t\t} else if(bet > contract.balance) {\n\t\t\tsetError(\"Insufficient balance\");\n\t\t} else {\n\t\t\tsetCards(null);\n\t\t\tsetFlipped([]);\n\t\t\tsetResult(null);\n\t\t\tconst { cards } = await contract.start(bet);\n\t\t\tsetCards(cards);\n\t\t\tsetBalance(balance - bet);\n\t\t\tsetPlaying(true);\n\t\t}\n\t}\n\n\tasync function end(data) {\n\t\tlet replace = 0;\n\t\tconst flipped = [];\n\t\tfor(let i=0; i<5; i++) {\n\t\t\tif(!data.get(\"card\" + i)) {\n\t\t\t\treplace |= 1 << i;\n\t\t\t\tflipped[i] = 1;\n\t\t\t}\n\t\t}\n\t\tsetFlipped(flipped);\n\t\tconst { cards, result, payout } = await contract.end(replace).finally(() => {\n\t\t\t// all cards must be visible again when the transaction ends, is cancelled or fails\n\t\t\tsetFlipped([]);\n\t\t});\n\t\tconst index = +result;\n\t\tif(index) {\n\t\t\tif(payout > 0) {\n\t\t\t\t// update balance\n\t\t\t\tsetBalance(balance + +payout);\n\t\t\t}\n\t\t\tsetResult({ index, payout });\n\t\t} else {\n\t\t\tsetResult(null);\n\t\t}\n\t\tsetCards(cards);\n\t\tsetPlaying(false);\n\t}\n\n\tasync function submit(event) {\n\t\tevent.preventDefault();\n\t\tsetError(null);\n\t\tsetLoading(true);\n\t\ttry {\n\t\t\tawait (playing ? end : start)(new FormData(event.target));\n\t\t} catch(e) {\n\t\t\t//FIXME improve error message\n\t\t\tconsole.warn(e.receipt);\n\t\t\tsetError(e.message);\n\t\t}\n\t\tsetLoading(false);\n\t}\n\n\treturn <>\n\t\t<ContractForm address={address} setError={setError} setContract={initContract} />\n\t\t<form onSubmit={submit}>\n\t\t\t<fieldset disabled={loading || !contract}>\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<label className=\"label\">Balance</label>\n\t\t\t\t\t<div className=\"value\">\n\t\t\t\t\t\t<input disabled={true} value={balance >= 0 ? `${format(balance)} ${unit}` : \"\"} />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<label className=\"label\">Bet</label>\n\t\t\t\t\t<div className=\"value group\">\n\t\t\t\t\t\t<input ref={bet} type=\"number\" name=\"bet\" step={1 / WEI} min={format(min)} max={format(max)} disabled={playing} spellCheck={false} />\n\t\t\t\t\t\t<button type=\"button\" onClick={setMinBet}>Min</button>\n\t\t\t\t\t\t<button type=\"button\" onClick={setMaxBet}>Max</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"row cards-wrapper\">\n\t\t\t\t\t<div className=\"cards\">\n\t\t\t\t\t\t{cards ?\n\t\t\t\t\t\t\tparse(cards).map((value, i) => <Card key={\"\" + i + playing} index={i} value={value} flipped={flipped[i]} />) :\n\t\t\t\t\t\t\tArray(5).fill().map((_, i) => <Card key={\"flipped\" + i} index={i} value={0} flipped />)\n\t\t\t\t\t\t}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<button type=\"submit\" id=\"play-button\" className={loading ? \"loading\" : \"\"}>\n\t\t\t\t\t\t{playing ? \"Draw\" : \"Deal\"}\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t\t{result && <div className=\"row\">\n\t\t\t\t\t<div id=\"result\">\n\t\t\t\t\t\t<div>{Results[result.index - 1]}</div>\n\t\t\t\t\t\t<div className=\"amount\">+{format(result.payout)} {unit}</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>}\n\t\t\t\t{error && <div className=\"row error\">{error}</div>}\n\t\t\t</fieldset>\n\t\t</form>\n\t</>\n\n}\n","export default function Footer({ address }) {\n\n\tconst ref = name => `/#${name}${address ? `/${address}` : \"\"}`;\n\n\treturn <div className=\"footer-component\">\n\t\t<div className=\"links\">\n\t\t\t<a href={ref(\"play\")}>Play</a>\n\t\t\t<a href={ref(\"history\")}>History</a>\n\t\t\t<a href=\"/#howtoplay\">How to play</a>\n\t\t</div>\n\t\t<div className=\"suits\">\n\t\t\t<div className=\"suit hearts\" />\n\t\t\t<div className=\"suit spades\" />\n\t\t\t<div className=\"suit diamonds\" />\n\t\t\t<div className=\"suit clubs\" />\n\t\t</div>\n\t</div>\n}\n","import { useEffect, useState } from \"react\";\nimport History from \"./components/History\";\nimport Play from \"./components/Play\";\nimport Footer from \"./components/Footer\";\n\nexport default function App() {\n\n\tfunction parse() {\n\t\treturn window.location.hash.substr(1).split(\"/\");\n\t}\n\n\tconst [ page, setPage ] = useState(parse());\n\n\tuseEffect(() => {\n\t\tconst fn = () => setPage(parse());\n\t\twindow.addEventListener(\"hashchange\", fn);\n\t\treturn () => window.removeEventListener(\"hashchange\", fn);\n\t});\n\n\treturn <>\n\t\t<div id=\"title\">videopoker-dapp</div>\n\t\t<div className=\"app-component\">\n\t\t\t{page[0] === \"history\" ?\n\t\t\t\t<History address={page[1]} page={page[2]} /> :\n\t\t\t\t<Play address={page[1]} resume={page[2]} />}\n\t\t</div>\n\t\t<Footer address={page[1]} />\n\t</>\n\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n"],"sourceRoot":""}