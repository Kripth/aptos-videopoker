{"version":3,"sources":["util/contract.ts","components/ContractForm.js","assets/audio/card.mp3","assets/audio/error.mp3","assets/audio/draw.mp3","assets/audio/loss.mp3","assets/audio/win.mp3","util/audio.ts","util/const.ts","util/cards.ts","components/Cards.js","util/cache.ts","util/format.ts","components/Payouts.js","components/History.js","components/ErrorMessage.js","util/activestate.ts","components/Play.js","components/Footer.js","components/App.js","index.js"],"names":["Contract","constructor","web3","address","contract","balance","min","max","call","method","args","this","methods","from","send","value","toString","event","eventName","filter","callback","provider","events","on","returnValues","off","BigInt","eth","getBalance","getGasPrice","map","id","game","state","ret","bet","cards","Number","date","Date","timestamp","change","playable","result","payout","getGames","start","searchId","Math","floor","random","Promise","success","fail","catch","player","gameId","startEvent","then","end","replace","endEvent","ContractForm","setError","setContract","first","setFirst","useState","loading","setLoading","async","handleCreateContract","info","contracts","find","o","window","contractAddress","chainId","ethereum","request","params","Web3","abi","Error","createContract","all","updateBalance","updateMin","updateMax","e","message","select","res","useEffect","className","onSubmit","preventDefault","FormData","target","get","htmlFor","autoComplete","name","defaultValue","spellCheck","type","style","width","audio","src","instance","Audio","volume","currentTime","play","card","_card","error","_error","draw","_draw","loss","_loss","win","_win","WEI","Value","Suit","Results","Card","_value","_suit","jack","queen","king","ace","hearts","diamonds","clubs","spades","parse","Array","isArray","i","length","offset","parseImpl","encoded","changedToFlipped","changed","flipped","onChange","cardClick","Cards","key","localStorage","getItem","getLastBet","toBigInt","match","padEnd","SyntaxError","formatNumber","amount","formatEnd","str","slice","substr","padStart","pad2","combinations","two","three","four","five","seven","ten","deck","pad","fill","concat","Payouts","betInput","useRef","payouts","setPayouts","setBet","unit","setUnit","console","warn","getPayouts","ref","disabled","History","page","pages","setPages","games","setGames","loaded","setLoaded","setChanged","load","getGame","some","interval","setInterval","clearInterval","reverse","ceil","location","hash","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","href","Page","enabled","children","ErrorMessage","active","isActive","setActive","ifActive","promise","ALL_FLIPPED","NONE_FLIPPED","Play","resume","cardsWrapper","playing","setPlaying","setBalance","undefined","setCards","setFlipped","setResult","updateImpl","update","data","previouslyFlipped","setItem","setLastBet","handleStart","finally","log","input","current","querySelectorAll","checked","handleEnd","index","best","getBestBet","finished","onClick","price","Footer","v","join","rel","App","split","setPage","fn","addEventListener","removeEventListener","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ba817e54.chunk.js","sourcesContent":["import Web3 from \"web3\";\r\nimport { Contract as Web3Contract, EventData } from \"web3-eth-contract\";\r\nimport { abi } from \"../contracts/Videopoker.json\";\r\n\r\ninterface Game {\r\n\tid: bigint;\r\n\tbet: bigint;\r\n\tdate: Date;\r\n\tcards: number;\r\n\tchange?: number;\r\n\tresult?: number;\r\n\tpayout?: bigint;\r\n\tplayable: boolean;\r\n}\r\n\r\ninterface CreatedEvent {\r\n\tsearchId: string;\r\n\tplayer: string;\r\n\tgameId: bigint;\r\n}\r\n\r\ninterface StartEvent {\r\n\tgameId: string;\r\n\tcards: string;\r\n}\r\n\r\ninterface EndEvent {\r\n\tgameId: string;\r\n\tcards: string;\r\n\tresult: string;\r\n\tpayout: string;\r\n}\r\n\r\nexport class Contract {\r\n\r\n\tprivate balance = 0n;\r\n\tprivate min = 0n;\r\n\tprivate max = 0n;\r\n\r\n\tconstructor(private web3: Web3, private address: string, private contract: Web3Contract) {}\r\n\r\n\tcall(method: string, ...args: any) {\r\n\t\treturn this.contract.methods[method](...args).call({from: this.address});\r\n\t}\r\n\r\n\tsend(method: string, value: number | bigint, ...args: any) {\r\n\t\treturn this.contract.methods[method](...args).send({from: this.address, value: value.toString()});\r\n\t}\r\n\r\n\tevent<T>(eventName: string, filter: any, callback: (values: T) => any) {\r\n\t\tconst provider = this.contract.events[eventName]({ filter }).on(\"data\", (event: EventData) => {\r\n\t\t\tcallback(event.returnValues as T);\r\n\t\t\tprovider.off(\"data\");\r\n\t\t});\r\n\t}\r\n\r\n\tasync updateBalance() {\r\n\t\treturn this.balance = BigInt(await this.web3.eth.getBalance(this.address));\r\n\t}\r\n\r\n\tasync updateMin() {\r\n\t\treturn this.min = BigInt(await this.call(\"getMinBet\"));\r\n\t}\r\n\r\n\tasync updateMax() {\r\n\t\treturn this.max = BigInt(await this.call(\"getMaxBet\"));\r\n\t}\r\n\r\n\tasync getGasPrice() {\r\n\t\treturn BigInt(await this.web3.eth.getGasPrice());\r\n\t}\r\n\r\n\tasync getPayouts() {\r\n\t\treturn (await this.call(\"getPayouts\")).map(BigInt);\r\n\t}\r\n\r\n\tasync getGame(id: bigint | string): Promise<Game> {\r\n\t\tconst game = await this.call(\"getGame\", id);\r\n\t\tconst state = +game.state;\r\n\t\tconst ret = {\r\n\t\t\tid,\r\n\t\t\tbet: BigInt(game.bet),\r\n\t\t\tcards: Number(game.cards),\r\n\t\t\tdate: new Date(game.timestamp * 1000)\r\n\t\t} as Game;\r\n\t\tif(state === 0) {\r\n\t\t\t// awaiting randomness at start\r\n\t\t\tret.change = 0b11111;\r\n\t\t} else if(state === 1) {\r\n\t\t\t// game started\r\n\t\t\tret.playable = true;\r\n\t\t} else if(state === 2) {\r\n\t\t\t// awaiting randomness at end\r\n\t\t\tret.change = +game.change;\r\n\t\t} else {\r\n\t\t\t// ended\r\n\t\t\tret.result = +game.result;\r\n\t\t\tret.payout = ret.bet;\r\n\t\t}\r\n\t\treturn ret;\r\n\t}\r\n\r\n\tgetGames(): Promise<string[]> {\r\n\t\treturn this.call(\"getGames\", this.address);\r\n\t}\r\n\r\n\tstart(bet: bigint): Promise<StartEvent> {\r\n\t\tconst searchId = Math.floor(Math.random() * 2147483648);\r\n\t\treturn new Promise((success, fail) => {\r\n\t\t\tthis.send(\"start\", bet, searchId).catch(fail);\r\n\t\t\tthis.event<CreatedEvent>(\"Created\", { searchId, player: this.address }, ({ gameId }) => {\r\n\t\t\t\tthis.startEvent(gameId).then(success);\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\tstartEvent(gameId: bigint): Promise<StartEvent> {\r\n\t\treturn new Promise(success => {\r\n\t\t\tthis.event<StartEvent>(\"Start\", { gameId }, success);\r\n\t\t});\r\n\t}\r\n\r\n\tend(gameId: bigint, replace: number): Promise<EndEvent> {\r\n\t\treturn new Promise((success, fail) => {\r\n\t\t\tthis.send(\"end\", 0, gameId, replace).catch(fail);\r\n\t\t\tthis.endEvent(gameId).then(success);\r\n\t\t});\r\n\t}\r\n\r\n\tendEvent(gameId: bigint): Promise<EndEvent> {\r\n\t\treturn new Promise(success => {\r\n\t\t\tthis.event<EndEvent>(\"End\", { gameId }, success);\r\n\t\t});\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n *\r\n * @param {string} contractAddress\r\n * @returns {Promise<Contract>}\r\n */\r\nexport async function createContract(contractAddress: string, chainId?: string) {\r\n\t// @ts-ignore\r\n\tconst eth = window.ethereum;\r\n\tif(eth) {\r\n\t\tif(chainId) {\r\n\t\t\tawait eth.request({ method: \"wallet_switchEthereumChain\", params: [{ chainId }]});\r\n\t\t}\r\n\t\tconst [ address ] = await eth.request({ method: \"eth_requestAccounts\" });\r\n\t\tconst web3 = new Web3(eth);\r\n\t\t// @ts-ignore\r\n\t\tconst contract = new web3.eth.Contract(abi, contractAddress);\r\n\t\treturn new Contract(web3, address, contract);\r\n\t} else {\r\n\t\tthrow new Error(\"Could not detect wallet extension\");\r\n\t}\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport { createContract } from \"../util/contract\";\r\nimport contracts from \"../assets/contracts.json\";\r\n\r\nexport default function ContractForm({ address, setError, setContract }) {\r\n\r\n\tconst [ first, setFirst ] = useState(true);\r\n\tconst [ loading, setLoading ] = useState(false);\r\n\r\n\tasync function handleCreateContract(address) {\r\n\t\ttry {\r\n\t\t\t// check whether it is a well known contract\r\n\t\t\tconst info = contracts.find(o => address === o.address) || { address };\r\n\t\t\tconst contract = window.contract = await createContract(address, info.chainId);\r\n\t\t\t// init balances before starting\r\n\t\t\tawait Promise.all([\r\n\t\t\t\tcontract.updateBalance(),\r\n\t\t\t\tcontract.updateMin(),\r\n\t\t\t\tcontract.updateMax()\r\n\t\t\t]);\r\n\t\t\treturn [ contract, info ];\r\n\t\t} catch(e) {\r\n\t\t\tsetFirst(true);\r\n\t\t\tsetError(e.message || \"Could not load contract\");\r\n\t\t\treturn [];\r\n\t\t}\r\n\t}\r\n\r\n\tasync function select(address) {\r\n\t\tsetError(null);\r\n\t\tsetContract(null);\r\n\t\tsetLoading(true);\r\n\t\tconst [ contract, info ] = await handleCreateContract(address);\r\n\t\tif(contract) {\r\n\t\t\tsetFirst(false);\r\n\t\t\tconst res = setContract(contract, info);\r\n\t\t\tif(res instanceof Promise) {\r\n\t\t\t\tawait res;\r\n\t\t\t}\r\n\t\t}\r\n\t\tsetLoading(false);\r\n\t}\r\n\r\n\tfunction submit(event) {\r\n\t\tevent.preventDefault();\r\n\t\tif(!first) {\r\n\t\t\t//TODO confirm change\r\n\t\t}\r\n\t\tselect(new FormData(event.target).get(\"address\"));\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tif(address) {\r\n\t\t\tselect(address);\r\n\t\t}\r\n\t}, [address]);\r\n\r\n\treturn <form className=\"row force-margin\" onSubmit={submit}>\r\n\t\t<label htmlFor=\"input-contract\" className=\"label\">Contract</label>\r\n\t\t<div className=\"value group\">\r\n\t\t\t<input id=\"input-contract\" autoComplete=\"off\" name=\"address\" defaultValue={address || contracts[0].address} spellCheck={false} />\r\n\t\t\t<button type=\"submit\" className={loading ? \"loading\" : \"\"} style={{width: \"8rem\"}}>{first ? \"Use\" : \"Change\"}</button>\r\n\t\t</div>\r\n\t</form>\r\n\r\n}\r\n","export default __webpack_public_path__ + \"static/media/card.bad10dba.mp3\";","export default __webpack_public_path__ + \"static/media/error.0c2f182b.mp3\";","export default __webpack_public_path__ + \"static/media/draw.d1037966.mp3\";","export default __webpack_public_path__ + \"static/media/loss.76807f79.mp3\";","export default __webpack_public_path__ + \"static/media/win.8edc9ff0.mp3\";","import _card from \"../assets/audio/card.mp3\";\r\nimport _error from \"../assets/audio/error.mp3\";\r\nimport _draw from \"../assets/audio/draw.mp3\";\r\nimport _loss from \"../assets/audio/loss.mp3\";\r\nimport _win from \"../assets/audio/win.mp3\";\r\n\r\nfunction audio(src: string) {\r\n\tconst instance = new Audio(src);\r\n\treturn () => {\r\n\t\tinstance.volume = 1;\r\n\t\tinstance.currentTime = 0;\r\n\t\tinstance.play();\r\n\t};\r\n}\r\n\r\nexport const card = audio(_card);\r\n\r\nexport const error = audio(_error);\r\n\r\nexport const draw = audio(_draw);\r\n\r\nexport const loss = audio(_loss);\r\n\r\nexport const win = audio(_win);\r\n","export const WEI = 1000000000000000000n;\r\n\r\nexport enum Value {\r\n\ttwo = 0,\r\n\tthree,\r\n\tfour,\r\n\tfive,\r\n\tsix,\r\n\tseven,\r\n\teight,\r\n\tnine,\r\n\tten,\r\n\tjack,\r\n\tqueen,\r\n\tking,\r\n\tace\r\n}\r\n\r\nexport enum Suit {\r\n\thearts = 0b000000,\r\n\tdiamonds = 0b010000,\r\n\tclubs = 0b100000,\r\n\tspades = 0b110000\r\n}\r\n\r\nexport const Results = [\r\n\t\"Jacks or better\",\r\n\t\"Two pair\",\r\n\t\"Three of a kind\",\r\n\t\"Straight\",\r\n\t\"Flush\",\r\n\t\"Full house\",\r\n\t\"Four of a kind\",\r\n\t\"Straight flush\",\r\n\t\"Royal flush\"\r\n];\r\n","import { Value, Suit } from \"./const\";\r\n\r\nexport class Card {\r\n\r\n\tconstructor(private _value: number, private _suit: number) {}\r\n\r\n\tget value(): string {\r\n\t\tswitch(this._value) {\r\n\t\t\tcase Value.jack: return \"J\";\r\n\t\t\tcase Value.queen: return \"Q\";\r\n\t\t\tcase Value.king: return \"K\";\r\n\t\t\tcase Value.ace: return \"A\";\r\n\t\t\tdefault: return (2 + this._value).toString();\r\n\t\t}\r\n\t}\r\n\r\n\tget className(): string {\r\n\t\tswitch(this._suit) {\r\n\t\t\tcase Suit.hearts: return \"hearts\";\r\n\t\t\tcase Suit.diamonds: return \"diamonds\";\r\n\t\t\tcase Suit.clubs: return \"clubs\";\r\n\t\t\tcase Suit.spades: return \"spades\";\r\n\t\t\tdefault: return \"\";\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\nexport function parse(cards: number | number[]): Card[] {\r\n\treturn (Array.isArray(cards) ? cards : parseImpl(cards))\r\n\t\t.map(encoded => new Card(encoded & 0b001111, encoded & 0b110000));\r\n}\r\n\r\nfunction parseImpl(cards: number): number[] {\r\n\tconst ret = Array(5);\r\n\tfor(let i=0; i<ret.length; i++) {\r\n\t\tconst offset = i * 6;\r\n\t\tret[i] = (cards & (0b111111 << offset)) >> offset;\r\n\t}\r\n\treturn ret;\r\n}\r\n\r\nexport function changedToFlipped(changed: number) {\r\n\treturn [\r\n\t\t(changed & 16) !== 0,\r\n\t\t(changed & 8) !== 0,\r\n\t\t(changed & 4) !== 0,\r\n\t\t(changed & 2) !== 0,\r\n\t\t(changed & 1) !== 0\r\n\t];\r\n}\r\n","import { card as cardClick } from \"../util/audio\";\nimport { parse } from \"../util/cards\";\nimport \"../styles/cards.scss\";\n\nfunction Card({card, name, flipped = false}){\n\treturn <div className={flipped ? \"card flipped\" : \"card\"}>\n\t\t<input id={name} type=\"checkbox\" name={name} onChange={cardClick} />\n\t\t<label htmlFor={name} className={card.className}>\n\t\t\t<span className=\"value\">{card.value}</span>\n\t\t\t<span className=\"suit\" />\n\t\t</label>\n\t</div>\n}\n\nexport default function Cards({ cards, flipped = [] }) {\n\treturn <div className=\"cards-component\">\n\t\t{parse(cards).map((card, i) => <Card key={i} card={card} name={`card${i}`} flipped={flipped[i]} />)}\n\t</div>\n}\n","function get(key: string) {\r\n\treturn window.localStorage.getItem(key);\r\n}\r\n\r\nfunction set(key: string, value: string) {\r\n\twindow.localStorage.setItem(key, value);\r\n}\r\n\r\nexport function getLastAddress() {\r\n\treturn get(\"address\");\r\n}\r\n\r\nexport function setLastAddress(address: string) {\r\n\tset(\"address\", address);\r\n}\r\n\r\nexport function getLastBet(address: string): bigint | null {\r\n\tconst bet = get(\"bet_\" + address);\r\n\treturn bet ? BigInt(bet) : null;\r\n}\r\n\r\nexport function setLastBet(address: string, bet: bigint) {\r\n\treturn window.localStorage.setItem(\"bet_\" + address, bet.toString());\r\n}\r\n","import { WEI } from \"./const\";\r\n\r\n/**\r\n * Parses a decimal number into a bigint.\r\n *\r\n * @throws {SyntaxError} When the input contains invalid characters or the format is invalid.\r\n */\r\nexport function toBigInt(value: string): bigint {\r\n\tconst match = value.match(/^(0|[1-9]\\d*)(?:\\.(\\d{1,18}))?$/);\r\n\tif(match) {\r\n\t\tif(match[2]) {\r\n\t\t\t// has a comma\r\n\t\t\treturn BigInt(match[1]) * WEI + BigInt(match[2].padEnd(18, \"0\"));\r\n\t\t} else {\r\n\t\t\treturn BigInt(value) * WEI;\r\n\t\t}\r\n\t} else {\r\n\t\tthrow new SyntaxError(\"Invalid number\");\r\n\t}\r\n}\r\n\r\n/**\r\n * Formats an integer used by the network into a decimal representation without\r\n * losing precision.\r\n */\r\nexport function formatNumber(amount: string | bigint): string {\r\n\tconst formatEnd = (str: string) => str.replace(/0+$/, \"\");\r\n\tconst str = amount.toString();\r\n\tif(str === \"0\") {\r\n\t\treturn str;\r\n\t} else if(str.length > 18) {\r\n\t\t// greater than 1 eth\r\n\t\tconst start = str.slice(0, -18);\r\n\t\tconst end = formatEnd(str.substr(str.length - 18));\r\n\t\treturn end === \"\" ? start : `${start}.${end}`;\r\n\t} else {\r\n\t\treturn `0.${formatEnd(str.padStart(18, \"0\"))}`\r\n\t}\r\n}\r\n\r\nexport function formatDate(date: Date): string {\r\n\tconst year = date.getFullYear().toString().padStart(4, \"0\");\r\n\tconst month = pad2(date.getMonth() + 1);\r\n\tconst day = pad2(date.getDate());\r\n\tconst hours = pad2(date.getHours());\r\n\tconst minutes = pad2(date.getMinutes());\r\n\tconst seconds = pad2(date.getSeconds());\r\n\treturn `${year}-${month}-${day} ${hours}:${minutes}:${seconds}`;\r\n}\r\n\r\nfunction pad2(value: number): string {\r\n\treturn value.toString().padStart(2, \"0\");\r\n}\r\n","import {useRef, useState} from \"react\";\r\nimport ContractForm from \"./ContractForm\";\r\nimport Cards from \"./Cards\";\r\nimport { getLastBet } from \"../util/cache\";\r\nimport { Value, Suit, Results } from \"../util/const\";\r\nimport { formatNumber, toBigInt } from \"../util/format\";\r\nimport \"../styles/results.scss\";\r\n\r\nconst combinations = [\r\n\t[Suit.hearts | Value.jack, Suit.clubs | Value.jack],\r\n\t[Suit.clubs | Value.two, Suit.spades | Value.two, Suit.clubs | Value.king, Suit.diamonds | Value.king],\r\n\t[Suit.hearts | Value.three, Suit.diamonds | Value.three, Suit.spades | Value.three],\r\n\t[Suit.clubs | Value.ace, Suit.clubs | Value.two, Suit.spades | Value.three, Suit.hearts | Value.four, Suit.clubs | Value.five],\r\n\t[Value.seven, Value.ace, Value.king, Value.three, Value.ten],\r\n\t[Suit.hearts | Value.two, Suit.clubs | Value.two, Suit.hearts | Value.ace, Suit.clubs | Value.ace, Suit.diamonds | Value.ace],\r\n\t[Suit.hearts | Value.ace, Suit.diamonds | Value.ace, Suit.clubs | Value.ace, Suit.spades | Value.ace],\r\n\t[Value.ace, Value.two, Value.three, Value.four, Value.five],\r\n\t[Value.ten, Value.jack, Value.queen, Value.king, Value.ace]\r\n].map(deck => {\r\n\tconst pad = 5 - deck.length;\r\n\treturn {\r\n\t\tcards: Array(pad).fill(0).concat(deck),\r\n\t\tflipped: Array(pad).fill(1)\r\n\t};\r\n});\r\n\r\nexport default function Payouts({ address }) {\r\n\r\n\tconst betInput = useRef();\r\n\r\n\tconst [ payouts, setPayouts ] = useState(null);\r\n\tconst [ bet, setBet ] = useState(0n);\r\n\tconst [ unit, setUnit ] = useState(\"\");\r\n\r\n\tasync function initContract(contract, { address, unit } = {}) {\r\n\t\tif(contract) {\r\n\t\t\tsetPayouts(await contract.getPayouts());\r\n\t\t\tsetBet(getLastBet(address) || 1000000000000000000n);\r\n\t\t\tsetUnit(unit || \"\");\r\n\t\t} else {\r\n\t\t\tsetPayouts(null);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction updateBet(event) {\r\n\t\ttry {\r\n\t\t\tsetBet(toBigInt(event.target.value));\r\n\t\t} catch(e) {\r\n\t\t\t//TODO mark as invalid number\r\n\t\t}\r\n\t}\r\n\r\n\treturn <div>\r\n\t\t<ContractForm address={address} setError={console.warn} setContract={initContract} />\r\n\t\t{payouts && <>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<label htmlFor=\"input-bet\" className=\"label\">Bet</label>\r\n\t\t\t\t<div className=\"value\">\r\n\t\t\t\t\t<input ref={betInput} id=\"input-bet\" autoComplete=\"off\" spellCheck={false} value={formatNumber(bet)} onChange={updateBet} />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<fieldset disabled>\r\n\t\t\t\t{payouts && combinations.map(({ cards, flipped }, i) => <div key={i} className=\"row results\">\r\n\t\t\t\t\t<div className=\"cards\">\r\n\t\t\t\t\t\t<Cards cards={cards} flipped={flipped} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"result\">\r\n\t\t\t\t\t\t<span>{bet - 1n} {payouts[i]}</span>\r\n\t\t\t\t\t\t<div>{Results[i]}</div>\r\n\t\t\t\t\t\t<span className=\"amount\">{formatNumber(bet * payouts[i])} {unit}</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>)}\r\n\t\t\t</fieldset>\r\n\t\t</>}\r\n\t</div>\r\n\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport Cards from \"./Cards\";\r\nimport ContractForm from \"./ContractForm\";\r\nimport { changedToFlipped } from \"../util/cards\";\r\nimport { Results } from \"../util/const\";\r\nimport { formatDate, formatNumber } from \"../util/format\";\r\nimport \"../styles/history.scss\";\r\nimport \"../styles/results.scss\";\r\n\r\nexport default function History({ address = \"\", page = 1 }) {\r\n\r\n\tconst pageSize = 5;\r\n\r\n\tconst [ contract, setContract ] = useState(null);\r\n\tconst [ unit, setUnit ] = useState(\"\");\r\n\r\n\tconst [ pages, setPages ] = useState(null);\r\n\tconst [ games, setGames ] = useState(null);\r\n\tconst [ loaded, setLoaded ] = useState(null);\r\n\tconst [ changed, setChanged ] = useState(null);\r\n\r\n\tuseEffect(() => {\r\n\t\tif(contract && games) {\r\n\t\t\tload(contract, page - 1, games);\r\n\t\t}\r\n\t}, [page]);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst interval = setInterval(() => changed && load(contract, page - 1, games), 5000);\r\n\t\treturn () => clearInterval(interval);\r\n\t});\r\n\r\n\tasync function load(contract, page, games) {\r\n\t\t// load pages from games\r\n\t\tconst i = page * pageSize;\r\n\t\tconst loaded = await Promise.all(games.slice(i, i + pageSize).map(gameId => contract.getGame(gameId)));\r\n\t\tsetChanged(loaded.some(game => game.change > 0));\r\n\t\tsetLoaded(loaded);\r\n\t}\r\n\r\n\tasync function initContract(contract, info) {\r\n\t\tif(contract) {\r\n\t\t\t// load history of played games\r\n\t\t\t//setGames(await contract.getGames());\r\n\t\t\tconst games = (await contract.getGames()).slice().reverse();\r\n\t\t\tsetGames(games);\r\n\t\t\tsetPages(Math.ceil(games.length / pageSize));\r\n\t\t\tsetUnit(info.unit || \"\");\r\n\t\t\tawait load(contract, page - 1, games);\r\n\t\t\t// update hash\r\n\t\t\twindow.location.hash = `#history/${info.address}/${page}`;\r\n\t\t} else {\r\n\t\t\tsetLoaded(null);\r\n\t\t\tsetGames(null);\r\n\t\t\tsetUnit(null);\r\n\t\t}\r\n\t\tsetContract(contract);\r\n\t}\r\n\r\n\treturn <div className=\"history-component\">\r\n\t\t<ContractForm address={address} setError={console.warn} setContract={initContract} />\r\n\t\t{loaded ? (loaded.length ? <>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div style={{width: \"100%\"}}>\r\n\t\t\t\t\t{loaded.map(game => <div key={game.id} className=\"history-component-game\">\r\n\t\t\t\t\t\t<div className=\"date\">{formatDate(game.date)}</div>\r\n\t\t\t\t\t\t<div className=\"results\">\r\n\t\t\t\t\t\t\t<fieldset className=\"cards\" disabled>\r\n\t\t\t\t\t\t\t\t<Cards cards={game.cards} flipped={changedToFlipped(game.change || 0)} />\r\n\t\t\t\t\t\t\t</fieldset>\r\n\t\t\t\t\t\t\t<div className=\"result\">\r\n\t\t\t\t\t\t\t\t{game.playable || game.change > 0 ? <a href={`/#play/${address}/${game.id}`}>\r\n\t\t\t\t\t\t\t\t\t<button type=\"button\">Resume</button>\r\n\t\t\t\t\t\t\t\t</a> : game.result ? <>\r\n\t\t\t\t\t\t\t\t\t<div>{Results[game.result - 1]}</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"amount\">{formatNumber(game.payout, 8)} {unit}</div>\r\n\t\t\t\t\t\t\t\t</> : \"\"}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>)}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row history-component-footer\">\r\n\t\t\t\t<span>Page {page} of {pages}</span>\r\n\t\t\t\t<div className=\"spacer\" />\r\n\t\t\t\t<Page enabled={page > 1 && pages > 1} href={`#history/${address}/${page - 1}`}>&lsaquo;</Page>\r\n\t\t\t\t<Page enabled={page < pages} href={`#history/${address}/${+page + 1}`}>&rsaquo;</Page>\r\n\t\t\t</div>\r\n\t\t</> : <div className=\"history-component-empty\">You haven't played any games yet</div>) :\r\n\t\t<div className=\"history-component-empty\">Select a contract to view your playing history</div>}\r\n\t</div>\r\n\r\n}\r\n\r\nfunction Page({ enabled, href, children }) {\r\n\tif(enabled) {\r\n\t\treturn <a className=\"nav\" href={href}><button>{children}</button></a>\r\n\t} else {\r\n\t\treturn <button className=\"nav\" disabled>{children}</button>\r\n\t}\r\n}\r\n","import \"../styles/error.scss\";\r\n\r\nexport default function ErrorMessage({ error }) {\r\n\treturn <div className=\"error-component\">{ error }</div>\r\n}\r\n","const active: Record<number, boolean> = {};\r\n\r\nexport function isActive(id: number): boolean {\r\n\treturn active[id];\r\n}\r\n\r\nexport function setActive(id: number, value: boolean) {\r\n\tactive[id] = value;\r\n}\r\n\r\nexport async function ifActive<T>(id: number, promise: Promise<T>): Promise<T> {\r\n\tawait promise;\r\n\tif(!active[id]) {\r\n\t\tthrow new Error(\"Component is no longer active\");\r\n\t}\r\n\treturn promise;\r\n}\r\n","import { useEffect, useRef, useState } from \"react\";\r\nimport Cards from \"./Cards\";\r\nimport ContractForm from \"./ContractForm\";\r\nimport ErrorMessage from \"./ErrorMessage\";\r\nimport { getId, setActive, ifActive, isActive } from \"../util/activestate\";\r\nimport * as audio from \"../util/audio\";\r\nimport { getLastBet, setLastBet } from \"../util/cache\";\r\nimport { changedToFlipped } from \"../util/cards\";\r\nimport { Results } from \"../util/const\";\r\nimport { toBigInt, formatNumber } from \"../util/format\";\r\nimport \"../styles/play.scss\";\r\n\r\nconst ALL_FLIPPED = Array(5).fill(true);\r\nconst NONE_FLIPPED = Array(5).fill(false);\r\n\r\n/**\r\n * @param {string} address\r\n * @param {number} resume\r\n * @returns {JSX.Element}\r\n */\r\nexport default function Play({ address, resume }) {\r\n\r\n\tconst bet = useRef();\r\n\tconst cardsWrapper = useRef();\r\n\r\n\tconst [ contract, setContract ] = useState(null);\r\n\r\n\tconst [ playing, setPlaying ] = useState(null);\r\n\tconst [ loading, setLoading ] = useState(false);\r\n\r\n\tconst [ unit, setUnit ] = useState(\"\");\r\n\tconst [ balance, setBalance ] = useState(undefined);\r\n\r\n\tconst [ cards, setCards ] = useState(0);\r\n\tconst [ flipped, setFlipped ] = useState(ALL_FLIPPED);\r\n\r\n\tconst [ result, setResult ] = useState(null);\r\n\tconst [ error, setError ] = useState(null);\r\n\r\n\tconst [ id ] = useState(Math.floor(Math.random() * 100000));\r\n\r\n\tuseEffect(() => {\r\n\t\tsetActive(id, true);\r\n\t\treturn () => setActive(id, false);\r\n\t}, []);\r\n\r\n\tfunction updateImpl(contract) {\r\n\t\treturn Promise.all([\r\n\t\t\tcontract.updateBalance().then(value => {\r\n\t\t\t\tsetBalance(value);\r\n\t\t\t\treturn value;\r\n\t\t\t}),\r\n\t\t\tcontract.updateMin(),\r\n\t\t\tcontract.updateMax()\r\n\t\t]);\r\n\t}\r\n\r\n\tfunction update() {\r\n\t\treturn updateImpl(contract);\r\n\t}\r\n\r\n\tfunction getBestBet(contract) {\r\n\t\tlet best = contract.balance / 10n;\r\n\t\tif(best > contract.max) best = contract.max;\r\n\t\telse if(best < contract.min) best = contract.min;\r\n\t\treturn best > contract.balance ? contract.balance : best;\r\n\t}\r\n\r\n\tasync function initContract(contract, info) {\r\n\t\tif(contract) {\r\n\t\t\tawait ifActive(id, updateImpl(contract));\r\n\t\t\tconst { unit } = info;\r\n\t\t\tsetUnit(unit || \"\");\r\n\t\t\t//TODO convert prices with coingecko API\r\n\t\t\t// calculate optimal bet\r\n\t\t\tbet.current.value = formatNumber(getLastBet(info.address) || getBestBet(contract));\r\n\t\t\t// update hash\r\n\t\t\twindow.location.hash = `#play/${info.address}`;\r\n\t\t\t// resume game\r\n\t\t\tif(resume) {\r\n\t\t\t\tconst game = await ifActive(id, contract.getGame(resume));\r\n\t\t\t\tconst change = game.change > 0;\r\n\t\t\t\tif(game.playable || change) {\r\n\t\t\t\t\tbet.current.value = formatNumber(game.bet);\r\n\t\t\t\t\tsetCards(game.cards);\r\n\t\t\t\t\tsetPlaying(game.id);\r\n\t\t\t\t\tif(change) {\r\n\t\t\t\t\t\tsetFlipped(changedToFlipped(game.change));\r\n\t\t\t\t\t\tsetLoading(true); // mark game as started\r\n\t\t\t\t\t\tif(!game.finished) {\r\n\t\t\t\t\t\t\thandleStart(contract.startEvent(game.id));\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\thandleEnd(contract.endEvent(game.id));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tsetFlipped(NONE_FLIPPED);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tbet.current.value = \"\";\r\n\t\t}\r\n\t\tsetContract(contract);\r\n\t}\r\n\r\n\tasync function setMinBet() {\r\n\t\tawait update();\r\n\t\tbet.current.value = formatNumber(contract.min);\r\n\t}\r\n\r\n\tasync function setMaxBet() {\r\n\t\tconst [ price ] = await Promise.all([contract.getGasPrice(), update()]);\r\n\t\tconst balance = contract.balance - price * 500000n; // save some for fees\r\n\t\tbet.current.value = formatNumber(contract.max < balance ? contract.max : balance);\r\n\t}\r\n\r\n\tasync function start(data) {\r\n\t\tconst bet = toBigInt(data.get(\"bet\"));\r\n\t\tawait ifActive(id, update());\r\n\t\tif(bet > contract.max) {\r\n\t\t\tthrow new Error(\"Bet too high\");\r\n\t\t} else if(bet < contract.min) {\r\n\t\t\tthrow new Error(\"Bet too low\");\r\n\t\t} else if(bet > contract.balance) {\r\n\t\t\tthrow new Error(\"Insufficient balance\");\r\n\t\t} else {\r\n\t\t\tconst previouslyFlipped = flipped;\r\n\t\t\tsetFlipped(ALL_FLIPPED);\r\n\t\t\tsetResult(null);\r\n\t\t\tsetLastBet(address, bet);\r\n\t\t\tawait handleStart(contract.start(bet).finally(() => {\r\n\t\t\t\tif(isActive(id)) {\r\n\t\t\t\t\t// restore to previous game in case of cancel/fail\r\n\t\t\t\t\tsetFlipped(previouslyFlipped);\r\n\t\t\t\t}\r\n\t\t\t}));\r\n\t\t}\r\n\t}\r\n\r\n\tasync function handleStart(promise) {\r\n\t\tconst { gameId, cards } = await ifActive(id, promise);\r\n\t\tconsole.log(id, isActive(id), gameId, cards);\r\n\t\t// make sure no cards are selected\r\n\t\tfor(const input of cardsWrapper.current.querySelectorAll(\":checked\")) {\r\n\t\t\tinput.checked = false;\r\n\t\t}\r\n\t\tsetCards(cards);\r\n\t\tsetFlipped(NONE_FLIPPED);\r\n\t\tsetPlaying(gameId);\r\n\t\tsetLoading(false);\r\n\t\tupdate();\r\n\t\taudio.draw();\r\n\t}\r\n\r\n\tasync function end(data) {\r\n\t\tlet replace = 0;\r\n\t\tconst flipped = [];\r\n\t\tfor(let i=0; i<5; i++) {\r\n\t\t\tif(!data.get(\"card\" + i)) {\r\n\t\t\t\treplace |= 1 << i;\r\n\t\t\t\tflipped[i] = 1;\r\n\t\t\t}\r\n\t\t}\r\n\t\tsetFlipped(flipped);\r\n\t\tawait handleEnd(contract.end(playing, replace).finally(() => {\r\n\t\t\t// all cards must be visible again when the transaction ends, is cancelled or fails\r\n\t\t\tsetFlipped(NONE_FLIPPED);\r\n\t\t}));\r\n\t}\r\n\r\n\tasync function handleEnd(promise) {\r\n\t\tconst { cards, result, payout } = await ifActive(id, promise);\r\n\t\tconst index = +result;\r\n\t\tif(index) {\r\n\t\t\tsetResult({ index, payout });\r\n\t\t\taudio.win();\r\n\t\t} else {\r\n\t\t\tsetResult(null);\r\n\t\t\taudio.loss();\r\n\t\t}\r\n\t\tsetCards(Number(BigInt(cards) & 68719476735n)); //FIXME fix event in solidity\r\n\t\tsetFlipped(NONE_FLIPPED);\r\n\t\tsetPlaying(null);\r\n\t\tsetLoading(false);\r\n\t\tupdate();\r\n\t}\r\n\r\n\tasync function submit(event) {\r\n\t\tevent.preventDefault();\r\n\t\tsetError(null);\r\n\t\tsetLoading(true);\r\n\t\ttry {\r\n\t\t\tawait (playing ? end : start)(new FormData(event.target));\r\n\t\t} catch(e) {\r\n\t\t\tif(isActive(id)) {\r\n\t\t\t\tsetError(e.message);\r\n\t\t\t\taudio.error();\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t} else {\r\n\t\t\t\tconsole.warn(\"Error thrown on inactive component\", e);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tif(contract) {\r\n\t\t\tconst interval = setInterval(update, 30000);\r\n\t\t\treturn () => clearInterval(interval);\r\n\t\t}\r\n\t}, [contract]);\r\n\r\n\treturn <div className=\"play-component\">\r\n\t\t<ContractForm address={address} setError={setError} setContract={initContract} />\r\n\t\t<form onSubmit={submit}>\r\n\t\t\t<fieldset disabled={loading || !contract}>\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t<label htmlFor=\"input-balance\" className=\"label\">Balance</label>\r\n\t\t\t\t\t<div className=\"value\">\r\n\t\t\t\t\t\t<input id=\"input-balance\" disabled={true} value={balance >= 0n ? `${formatNumber(balance)} ${unit}` : \"\"} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t<label htmlFor=\"input-bet\" className=\"label\">Bet</label>\r\n\t\t\t\t\t<fieldset className=\"value group\" disabled={!!playing}>\r\n\t\t\t\t\t\t<input ref={bet} id=\"input-bet\" autoComplete=\"off\" name=\"bet\" spellCheck={false} />\r\n\t\t\t\t\t\t<button type=\"button\" onClick={setMinBet}>Min</button>\r\n\t\t\t\t\t\t<button type=\"button\" onClick={setMaxBet}>Max</button>\r\n\t\t\t\t\t</fieldset>\r\n\t\t\t\t</div>\r\n\t\t\t\t<fieldset ref={cardsWrapper} className=\"row play-component-cards\" disabled={!playing}>\r\n\t\t\t\t\t<Cards cards={cards} flipped={flipped} />\r\n\t\t\t\t</fieldset>\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t<button type=\"submit\" className={`play-component-play-button${loading ? \" loading\" : \"\"}`}>\r\n\t\t\t\t\t\t{playing ? \"Draw\" : \"Deal\"}\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t{result && <div className=\"row\">\r\n\t\t\t\t\t<div className=\"play-component-result\">\r\n\t\t\t\t\t\t<div>{Results[result.index - 1]}</div>\r\n\t\t\t\t\t\t<div className=\"amount\">+{formatNumber(result.payout)} {unit}</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>}\r\n\t\t\t\t{error && <div className=\"row\"><ErrorMessage error={error} /></div>}\r\n\t\t\t</fieldset>\r\n\t\t</form>\r\n\t</div>\r\n\r\n}\r\n","import \"../styles/footer.scss\";\r\n\r\nexport default function Footer({ address }) {\r\n\r\n\tconst ref = (name, address, ...args) => `#${name}${address ? [address, ...args].map(v => \"/\" + v).join(\"\") : \"\"}`;\r\n\r\n\treturn <div className=\"footer-component\">\r\n\t\t<div className=\"links\">\r\n\t\t\t<a href={ref(\"play\", address)}>Play</a>\r\n\t\t\t<a href={ref(\"history\", address, \"1\")}>History</a>\r\n\t\t\t<a href={ref(\"payouts\", address)}>Payouts</a>\r\n\t\t\t<a href=\"https://github.com/Kripth/videopoker-dapp/blob/master/README.md\" target=\"_blank\" rel=\"noreferrer\">About</a>\r\n\t\t\t<a href=\"https://github.com/Kripth/videopoker-dapp\" target=\"_blank\" rel=\"noreferrer\">GitHub</a>\r\n\t\t</div>\r\n\t\t<div className=\"suits\">\r\n\t\t\t<div className=\"suit hearts\" />\r\n\t\t\t<div className=\"suit spades\" />\r\n\t\t\t<div className=\"suit diamonds\" />\r\n\t\t\t<div className=\"suit clubs\" />\r\n\t\t</div>\r\n\t</div>\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport Payouts from \"./Payouts\";\r\nimport History from \"./History\";\r\nimport Play from \"./Play\";\r\nimport Footer from \"./Footer\";\r\nimport \"../styles/app.scss\";\r\n\r\nexport default function App() {\r\n\r\n\tfunction parse() {\r\n\t\treturn window.location.hash.substr(1).split(\"/\");\r\n\t}\r\n\r\n\tconst [ page, setPage ] = useState(parse());\r\n\r\n\tuseEffect(() => {\r\n\t\tconst fn = () => setPage(parse());\r\n\t\twindow.addEventListener(\"hashchange\", fn);\r\n\t\treturn () => window.removeEventListener(\"hashchange\", fn);\r\n\t});\r\n\r\n\treturn <div className=\"app-component\">\r\n\t\t<div className=\"app-component-title\">videopoker-dapp</div>\r\n\t\t<div className=\"app-component-content\">\r\n\t\t\t{page[0] === \"history\" ?\r\n\t\t\t\t<History address={page[1]} page={page[2]} /> :\r\n\t\t\tpage[0] === \"payouts\" ?\r\n\t\t\t\t<Payouts address={page[1]} /> :\r\n\t\t\t\t<Play address={page[1]} resume={page[2]} />}\r\n\t\t</div>\r\n\t\t<Footer address={page[1]} />\r\n\t</div>\r\n\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./styles/common.scss\";\r\nimport App from \"./components/App\";\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<App />\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}