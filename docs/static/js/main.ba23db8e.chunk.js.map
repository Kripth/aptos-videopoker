{"version":3,"sources":["assets/audio/card.mp3","assets/audio/error.mp3","assets/audio/draw.mp3","assets/audio/loss.mp3","assets/audio/win.mp3","util/audio.js","components/Card.js","components/Cards.js","util/const.js","util/util.js","util/contract.js","components/ContractForm.js","components/History.js","components/Play.js","components/Footer.js","App.js","index.js"],"names":["audio","src","instance","Audio","volume","currentTime","play","card","_card","error","_error","draw","_draw","loss","_loss","win","_win","values","classNames","Card","index","value","flipped","type","number","name","className","id","onChange","htmlFor","parse","cards","Array","fill","map","_","i","offset","Cards","WEI","Results","format","amount","digits","formatEnd","str","slice","replace","toString","length","start","end","substr","padStart","Contract","constructor","web3","address","contract","this","call","method","args","methods","from","send","event","eventName","callback","provider","events","filter","gameId","on","returnValues","off","balance","BigInt","eth","getBalance","min","max","getGasPrice","bet","deck","playable","result","Number","payout","getGames","Math","floor","random","Promise","success","fail","catch","ContractForm","setError","setContract","first","setFirst","useState","loading","setLoading","async","select","arg","toLowerCase","contractAddress","window","ethereum","request","Web3","json","createContract","all","updateBalance","updateMin","updateMax","res","contracts","find","o","useEffect","onSubmit","preventDefault","FormData","target","get","defaultValue","spellCheck","style","width","History","page","unit","setUnit","pages","setPages","games","setGames","loaded","setLoaded","load","getGame","console","warn","info","reverse","ceil","location","hash","disabled","log","game","href","flexGrow","Page","enabled","children","Play","resume","useRef","playing","setPlaying","setBalance","undefined","setCards","setFlipped","setResult","updateImpl","then","update","data","match","padEnd","SyntaxError","toBigInt","Error","finally","interval","setInterval","clearInterval","coingecko","best","current","e","message","ref","onClick","gas","Footer","v","join","App","split","setPage","fn","addEventListener","removeEventListener","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ba23db8e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/card.bad10dba.mp3\";","export default __webpack_public_path__ + \"static/media/error.0c2f182b.mp3\";","export default __webpack_public_path__ + \"static/media/draw.d1037966.mp3\";","export default __webpack_public_path__ + \"static/media/loss.76807f79.mp3\";","export default __webpack_public_path__ + \"static/media/win.8edc9ff0.mp3\";","import _card from \"../assets/audio/card.mp3\";\r\nimport _error from \"../assets/audio/error.mp3\";\r\nimport _draw from \"../assets/audio/draw.mp3\";\r\nimport _loss from \"../assets/audio/loss.mp3\";\r\nimport _win from \"../assets/audio/win.mp3\";\r\n\r\nfunction audio(src) {\r\n\tconst instance = new Audio(src);\r\n\treturn () => {\r\n\t\tinstance.volume = 1;\r\n\t\tinstance.currentTime = 0;\r\n\t\tinstance.play();\r\n\t};\r\n}\r\n\r\nexport const card = audio(_card);\r\n\r\nexport const error = audio(_error);\r\n\r\nexport const draw = audio(_draw);\r\n\r\nexport const loss = audio(_loss);\r\n\r\nexport const win = audio(_win);\r\n","import { card } from \"../util/audio\";\r\n\r\nconst JACK = 9;\r\nconst QUEEN = 10;\r\nconst KING = 11;\r\nconst ACE = 12;\r\n\r\nconst values = {\r\n\t[JACK]: \"J\",\r\n\t[QUEEN]: \"Q\",\r\n\t[KING]: \"K\",\r\n\t[ACE]: \"A\"\r\n};\r\n\r\nconst HEARTS = 0b000000;\r\nconst DIAMONDS = 0b010000;\r\nconst CLUBS = 0b100000;\r\nconst SPADES = 0b110000;\r\n\r\nconst classNames = {\r\n\t[HEARTS]: \"hearts\",\r\n\t[DIAMONDS]: \"diamonds\",\r\n\t[CLUBS]: \"clubs\",\r\n\t[SPADES]: \"spades\",\r\n};\r\n\r\nexport default function Card({index, value, flipped = false}){\r\n\r\n\tconst type = value & 0b110000;\r\n\tconst number = value & 0b001111;\r\n\r\n\tconst name = `card${index}`;\r\n\r\n\treturn <div className={flipped ? \"card flipped\" : \"card\"}>\r\n\t\t<input id={name} type=\"checkbox\" name={name} onChange={card} />\r\n\t\t<label htmlFor={name} className={classNames[type]}>\r\n\t\t\t<span className=\"value\">{values[number] || (2 + number)}</span>\r\n\t\t\t<span className=\"suit\" />\r\n\t\t</label>\r\n\t</div>\r\n\r\n}\r\n","import Card from \"./Card\";\n\n/**\n * @param {number} cards\n * @returns {number[]}\n */\nexport function parse(cards) {\n\treturn Array(5).fill().map((_, i) => {\n\t\tconst offset = i * 6;\n\t\treturn (cards & (0b111111 << offset)) >> offset;\n\t});\n}\n\nexport default function Cards({cards}) {\n\treturn <div className=\"cards\">\n\t\t{parse(cards).map((value, i) => <Card key={i} index={i} value={value} />)}\n\t</div>\n}\n","export const WEI = 1000000000000000000n;\r\n\r\nexport const Results = [\r\n\t\"Jacks or better\",\r\n\t\"Two pair\",\r\n\t\"Three of a kind\",\r\n\t\"Straight\",\r\n\t\"Flush\",\r\n\t\"Full house\",\r\n\t\"Four of a kind\",\r\n\t\"Straight flush\",\r\n\t\"Royal flush\"\r\n];\r\n","import { WEI } from \"./const\";\r\n\r\n/**\r\n * Creates a random number to be used as game id.\r\n *\r\n * @returns {bigint}\r\n */\r\nexport function random() {\r\n\tlet value = 0n;\r\n\tfor(let i=0; i<8; i++) {\r\n\t\tvalue |= BigInt(Math.floor(Math.random() * 2147483648)) << BigInt(i * 31);\r\n\t}\r\n\treturn value;\r\n}\r\n\r\n/**\r\n * Parses a decimal number into a bigint.\r\n *\r\n * @param {string} value\r\n * @returns {bigint}\r\n * @throws {SyntaxError} When the input contains invalid characters or the format is invalid.\r\n */\r\nexport function toBigInt(value) {\r\n\tconst match = value.match(/^(0|[1-9]\\d*)(?:\\.(\\d{1,18}))?$/);\r\n\tif(match) {\r\n\t\tif(match[2]) {\r\n\t\t\t// has a comma\r\n\t\t\treturn BigInt(match[1]) * WEI + BigInt(match[2].padEnd(18, \"0\"));\r\n\t\t} else {\r\n\t\t\treturn BigInt(value) * WEI;\r\n\t\t}\r\n\t} else {\r\n\t\tthrow new SyntaxError(\"Invalid number\");\r\n\t}\r\n}\r\n\r\n/**\r\n * @param {bigint|string} amount\r\n * @param {number} digits\r\n * @returns {string}\r\n */\r\nexport function format(amount, digits = 18) {\r\n\tconst formatEnd = str => str.slice(0, digits).replace(/0+$/, \"\");\r\n\tconst str = amount.toString();\r\n\tif(str === \"0\") {\r\n\t\treturn str;\r\n\t} else if(str.length > 18) {\r\n\t\t// greater than 1 eth\r\n\t\tconst start = str.slice(0, -18);\r\n\t\tconst end = formatEnd(str.substr(str.length - 18));\r\n\t\treturn end === \"\" ? start : `${start}.${end}`;\r\n\t} else {\r\n\t\treturn `0.${formatEnd(str.padStart(18, \"0\"))}`\r\n\t}\r\n}\r\n","import Web3 from \"web3\";\r\nimport json from \"../assets/abi.json\";\r\nimport { random } from \"./util\";\r\n\r\nexport class Contract {\r\n\r\n\t/**\r\n\t * @param {Web3} web3\r\n\t * @param {string} address\r\n\t * @param contract\r\n\t */\r\n\tconstructor(web3, address, contract) {\r\n\t\tthis.web3 = web3;\r\n\t\tthis.address = address;\r\n\t\tthis.contract = contract;\r\n\t\t//this.contract.events.allEvents({toBlock: 'latest'}, console.log);\r\n\t}\r\n\r\n\tcall(method, ...args) {\r\n\t\treturn this.contract.methods[method](...args).call({from: this.address});\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} method\r\n\t * @param {bigint} value\r\n\t * @param {*} args\r\n\t */\r\n\tsend(method, value, ...args) {\r\n\t\treturn this.contract.methods[method](...args).send({from: this.address, value: value.toString()});\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} eventName\r\n\t * @param {function} callback\r\n\t */\r\n\tevent(eventName, callback) {\r\n\t\tconst provider = this.contract.events[eventName]({filter: {gameId: this.gameId}}).on(\"data\", event => {\r\n\t\t\tcallback(event.returnValues);\r\n\t\t\tprovider.off(\"data\");\r\n\t\t});\r\n\t}\r\n\r\n\tasync updateBalance() {\r\n\t\treturn this.balance = BigInt(await this.web3.eth.getBalance(this.address));\r\n\t}\r\n\r\n\tasync updateMin() {\r\n\t\treturn this.min = BigInt(await this.call(\"getMinBet\"));\r\n\t}\r\n\r\n\tasync updateMax() {\r\n\t\treturn this.max = BigInt(await this.call(\"getMaxBet\"));\r\n\t}\r\n\r\n\tasync getGasPrice() {\r\n\t\treturn BigInt(await this.web3.eth.getGasPrice());\r\n\t}\r\n\r\n\tasync getGame(id) {\r\n\t\tconst { bet, deck, cards } = await this.call(\"getGame\", id);\r\n\t\tif(+deck) {\r\n\t\t\t// game is still playable\r\n\t\t\treturn {\r\n\t\t\t\tid,\r\n\t\t\t\tplayable: true,\r\n\t\t\t\tbet: BigInt(bet),\r\n\t\t\t\tcards\r\n\t\t\t};\r\n\t\t} else {\r\n\t\t\t// game has ended\r\n\t\t\tconst result = BigInt(bet);\r\n\t\t\treturn {\r\n\t\t\t\tid,\r\n\t\t\t\tresult: Number(result >> 252n),\r\n\t\t\t\tpayout: result & (2n ** 252n - 1n),\r\n\t\t\t\tcards\r\n\t\t\t};\r\n\t\t}\r\n\t}\r\n\r\n\tgetGames() {\r\n\t\treturn this.call(\"getGames\", this.address);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {bigint} bet\r\n\t * @returns {Promise<{bet, cards}>}\r\n\t */\r\n\tstart(bet) {\r\n\t\tconst gameId = this.gameId = random();\r\n\t\treturn new Promise((success, fail) => {\r\n\t\t\tthis.send(\"start\", bet, gameId).catch(fail);\r\n\t\t\tthis.event(\"Start\", success);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} replace\r\n\t * @returns {Promise<{cards, result, payout}>}\r\n\t */\r\n\tend(replace) {\r\n\t\treturn new Promise((success, fail) => {\r\n\t\t\tthis.send(\"end\", 0, this.gameId, replace).catch(fail);\r\n\t\t\tthis.event(\"End\", success);\r\n\t\t});\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n *\r\n * @param {string} contractAddress\r\n * @returns {Promise<Contract> | undefined}\r\n */\r\nexport async function createContract(contractAddress) {\r\n\tconst eth = window.ethereum;\r\n\tif(eth) {\r\n\t\tconst [ address ] = await window.ethereum.request({ method: 'eth_requestAccounts' });\r\n\t\tconst web3 = new Web3(eth);\r\n\t\tconst contract = new web3.eth.Contract(json, contractAddress);\r\n\t\treturn new Contract(web3, address, contract);\r\n\t}\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport { createContract } from \"../util/contract\";\r\nimport contracts from \"../assets/contracts.json\";\r\n\r\nexport default function ContractForm({ address, setError, setContract }) {\r\n\r\n\tconst [ first, setFirst ] = useState(true);\r\n\tconst [ loading, setLoading ] = useState(false);\r\n\r\n\tasync function select(arg) {\r\n\t\tconst address = arg.toLowerCase();\r\n\t\tsetError(null);\r\n\t\tsetContract(null);\r\n\t\tsetLoading(true);\r\n\t\tconst contract = await createContract(address);\r\n\t\tif(contract) {\r\n\t\t\twindow.contract = contract;\r\n\t\t\t// init balances before starting\r\n\t\t\tawait Promise.all([\r\n\t\t\t\tcontract.updateBalance(),\r\n\t\t\t\tcontract.updateMin(),\r\n\t\t\t\tcontract.updateMax()\r\n\t\t\t]);\r\n\t\t\tsetFirst(false);\r\n\t\t\t// check whether it is a well known contract\r\n\t\t\tconst res = setContract(contract, contracts.find(o => address === o.address) || {address});\r\n\t\t\tif(res instanceof Promise) {\r\n\t\t\t\tawait res;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tsetFirst(true);\r\n\t\t\tsetError(\"Could not load contract\");\r\n\t\t}\r\n\t\tsetLoading(false);\r\n\t}\r\n\r\n\tfunction submit(event) {\r\n\t\tevent.preventDefault();\r\n\t\tif(!first) {\r\n\t\t\t//TODO confirm change\r\n\t\t}\r\n\t\tselect(new FormData(event.target).get(\"address\"));\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tif(address) {\r\n\t\t\tselect(address);\r\n\t\t}\r\n\t}, [address]);\r\n\r\n\treturn <form className=\"row force-margin\" onSubmit={submit}>\r\n\t\t<label htmlFor=\"input-contract\" className=\"label\">Contract</label>\r\n\t\t<div className=\"value group\">\r\n\t\t\t<input id=\"input-contract\" name=\"address\" defaultValue={address || contracts[0].address} spellCheck={false} />\r\n\t\t\t<button type=\"submit\" className={loading ? \"loading\" : \"\"} style={{width: \"8rem\"}}>{first ? \"Use\" : \"Change\"}</button>\r\n\t\t</div>\r\n\t</form>\r\n\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport Cards from \"./Cards\";\r\nimport ContractForm from \"./ContractForm\";\r\nimport { Results } from \"../util/const\";\r\nimport { format } from \"../util/util\";\r\n\r\nexport default function History({ address = \"\", page = 1 }) {\r\n\r\n\tconst pageSize = 5;\r\n\r\n\tconst [ contract, setContract ] = useState(null);\r\n\tconst [ unit, setUnit ] = useState(\"\");\r\n\r\n\tconst [ pages, setPages ] = useState(null);\r\n\tconst [ games, setGames ] = useState(null);\r\n\tconst [ loaded, setLoaded ] = useState(null);\r\n\r\n\tuseEffect(() => {\r\n\t\tif(contract && games) {\r\n\t\t\tload(contract, page - 1, games);\r\n\t\t}\r\n\t}, [page]);\r\n\r\n\tasync function load(contract, page, games) {\r\n\t\t// load pages from games\r\n\t\tconst i = page * pageSize;\r\n\t\tsetLoaded(await Promise.all(games.slice(i, i + pageSize).map(gameId => contract.getGame(gameId))));\r\n\t}\r\n\r\n\tfunction updateOrder(event) {\r\n\t\tconsole.log(event);\r\n\t}\r\n\r\n\tasync function initContract(contract, info) {\r\n\t\tif(contract) {\r\n\t\t\t// load history of played games\r\n\t\t\t//setGames(await contract.getGames());\r\n\t\t\tconst games = (await contract.getGames()).slice().reverse();\r\n\t\t\tsetGames(games);\r\n\t\t\tsetPages(Math.ceil(games.length / pageSize));\r\n\t\t\tsetUnit(info.unit || \"\");\r\n\t\t\tawait load(contract, page - 1, games);\r\n\t\t\t// update hash\r\n\t\t\twindow.location.hash = `#history/${info.address}/${page}`;\r\n\t\t} else {\r\n\t\t\tsetLoaded(null);\r\n\t\t\tsetGames(null);\r\n\t\t\tsetUnit(null);\r\n\t\t}\r\n\t\tsetContract(contract);\r\n\t}\r\n\r\n\treturn <>\r\n\t\t<ContractForm address={address} setError={console.warn} setContract={initContract} />\r\n\t\t<div className=\"row\">\r\n\t\t\t<label id=\"input-order\" className=\"label\">Order by</label>\r\n\t\t\t<div className=\"value\">\r\n\t\t\t\t<select id=\"input-order\" disabled onChange={updateOrder}>\r\n\t\t\t\t\t<option value=\"desc\">Newest</option>\r\n\t\t\t\t\t<option value=\"asc\">Oldest</option>\r\n\t\t\t\t</select>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t{loaded && <>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<table className=\"history\">\r\n\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t<th>Cards</th>\r\n\t\t\t\t\t\t\t<th>Result</th>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t</thead>\r\n\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t{loaded.map(game => <tr key={game.id}>\r\n\t\t\t\t\t\t\t<td><fieldset disabled><Cards cards={game.cards} /></fieldset></td>\r\n\t\t\t\t\t\t\t<td className=\"result\">\r\n\t\t\t\t\t\t\t\t{game.playable ? <a href={`/#play/${address}/${game.id}`}>\r\n\t\t\t\t\t\t\t\t\t<button type=\"button\">Resume</button>\r\n\t\t\t\t\t\t\t\t</a> : game.result ? <>\r\n\t\t\t\t\t\t\t\t\t<div>{Results[game.result - 1]}</div>\r\n\t\t\t\t\t\t\t\t\t<div>{format(game.payout, 8)} {unit}</div>\r\n\t\t\t\t\t\t\t\t</> : \"\"}\r\n\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t</tr>)}\r\n\t\t\t\t\t</tbody>\r\n\t\t\t\t</table>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row history-footer\">\r\n\t\t\t\t<span>Page {page} of {pages}</span>\r\n\t\t\t\t<div style={{flexGrow: 1}} />\r\n\t\t\t\t<Page enabled={page > 1 && pages > 1} href={`#history/${address}/${page - 1}`}>Previous</Page>\r\n\t\t\t\t<Page enabled={page < pages} href={`#history/${address}/${+page + 1}`}>Next</Page>\r\n\t\t\t</div>\r\n\t\t</>}\r\n\t</>\r\n\r\n}\r\n\r\nfunction Page({ enabled, href, children }) {\r\n\tif(enabled) {\r\n\t\treturn <a className=\"nav\" href={href}><button>{children}</button></a>\r\n\t} else {\r\n\t\treturn <button className=\"nav\" disabled>{children}</button>\r\n\t}\r\n}\r\n","import { useEffect, useRef, useState } from \"react\";\r\nimport Card from \"./Card\";\r\nimport { parse } from \"./Cards\";\r\nimport ContractForm from \"./ContractForm\";\r\nimport * as audio from \"../util/audio\";\r\nimport { Results } from \"../util/const\";\r\nimport { toBigInt, format } from \"../util/util\";\r\n\r\n/**\r\n * @param {string} address\r\n * @param {number} resume\r\n * @returns {JSX.Element}\r\n */\r\nexport default function Play({ address, resume }) {\r\n\r\n\tconst bet = useRef();\r\n\r\n\tconst [ contract, setContract ] = useState(null);\r\n\r\n\tconst [ playing, setPlaying ] = useState(false);\r\n\tconst [ loading, setLoading ] = useState(false);\r\n\r\n\tconst [ unit, setUnit ] = useState(\"\");\r\n\tconst [ balance, setBalance ] = useState(undefined);\r\n\r\n\tconst [ cards, setCards ] = useState(null);\r\n\tconst [ flipped, setFlipped ] = useState([]);\r\n\r\n\tconst [ result, setResult ] = useState(null);\r\n\tconst [ error, setError ] = useState(null);\r\n\r\n\tfunction updateImpl(contract) {\r\n\t\treturn Promise.all([\r\n\t\t\tcontract.updateBalance().then(value => {\r\n\t\t\t\tsetBalance(value);\r\n\t\t\t\treturn value;\r\n\t\t\t}),\r\n\t\t\tcontract.updateMin(),\r\n\t\t\tcontract.updateMax()\r\n\t\t]);\r\n\t}\r\n\r\n\tfunction update() {\r\n\t\treturn updateImpl(contract);\r\n\t}\r\n\r\n\tasync function initContract(contract, info) {\r\n\t\tif(contract) {\r\n\t\t\tawait updateImpl(contract);\r\n\t\t\tconst { unit, coingecko } = info;\r\n\t\t\tsetUnit(unit || \"\");\r\n\t\t\t//TODO convert prices with coingecko API\r\n\t\t\t// calculate optimal bet\r\n\t\t\tlet best = contract.balance / 10n;\r\n\t\t\tif(best > contract.max) best = contract.max;\r\n\t\t\telse if(best < contract.min) best = contract.min;\r\n\t\t\tbet.current.value = format(best, 5);\r\n\t\t\t// update hash\r\n\t\t\twindow.location.hash = `#play/${info.address}`;\r\n\t\t\t// resume game\r\n\t\t\tif(resume) {\r\n\t\t\t\tconst game = await contract.getGame(resume);\r\n\t\t\t\tif(game.playable) {\r\n\t\t\t\t\tcontract.gameId = game.id;\r\n\t\t\t\t\tbet.current.value = format(game.bet);\r\n\t\t\t\t\tsetCards(game.cards);\r\n\t\t\t\t\tsetPlaying(true);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tbet.current.value = \"\";\r\n\t\t}\r\n\t\tsetContract(contract);\r\n\t}\r\n\r\n\tasync function setMinBet() {\r\n\t\tawait update();\r\n\t\tbet.current.value = format(contract.min);\r\n\t}\r\n\r\n\tasync function setMaxBet() {\r\n\t\tconst [ gas ] = await Promise.all([contract.getGasPrice(), update()]);\r\n\t\tconst balance = contract.balance - gas * 310000n;\r\n\t\tbet.current.value = format(contract.max < balance ? contract.max : balance);\r\n\t}\r\n\r\n\tasync function start(data) {\r\n\t\tconst bet = toBigInt(data.get(\"bet\"));\r\n\t\tawait update();\r\n\t\tif(bet > contract.max) {\r\n\t\t\tthrow new Error(\"Bet too high\");\r\n\t\t} else if(bet < contract.min) {\r\n\t\t\tthrow new Error(\"Bet too low\");\r\n\t\t} else if(bet > contract.balance) {\r\n\t\t\tthrow new Error(\"Insufficient balance\");\r\n\t\t} else {\r\n\t\t\tsetCards(null);\r\n\t\t\tsetFlipped([]);\r\n\t\t\tsetResult(null);\r\n\t\t\tconst { cards } = await contract.start(bet);\r\n\t\t\tsetCards(cards);\r\n\t\t\tsetBalance(balance - bet);\r\n\t\t\tsetPlaying(true);\r\n\t\t\taudio.draw();\r\n\t\t}\r\n\t}\r\n\r\n\tasync function end(data) {\r\n\t\tlet replace = 0;\r\n\t\tconst flipped = [];\r\n\t\tfor(let i=0; i<5; i++) {\r\n\t\t\tif(!data.get(\"card\" + i)) {\r\n\t\t\t\treplace |= 1 << i;\r\n\t\t\t\tflipped[i] = 1;\r\n\t\t\t}\r\n\t\t}\r\n\t\tsetFlipped(flipped);\r\n\t\tconst { cards, result, payout } = await contract.end(replace).finally(() => {\r\n\t\t\t// all cards must be visible again when the transaction ends, is cancelled or fails\r\n\t\t\tsetFlipped([]);\r\n\t\t});\r\n\t\tconst index = +result;\r\n\t\tif(index) {\r\n\t\t\tif(payout > 0) {\r\n\t\t\t\t// update balance\r\n\t\t\t\tsetBalance(balance + BigInt(payout));\r\n\t\t\t}\r\n\t\t\tsetResult({ index, payout });\r\n\t\t\taudio.win();\r\n\t\t} else {\r\n\t\t\tsetResult(null);\r\n\t\t\taudio.loss();\r\n\t\t}\r\n\t\tsetCards(cards);\r\n\t\tsetPlaying(false);\r\n\t}\r\n\r\n\tasync function submit(event) {\r\n\t\tevent.preventDefault();\r\n\t\tsetError(null);\r\n\t\tsetLoading(true);\r\n\t\ttry {\r\n\t\t\tawait (playing ? end : start)(new FormData(event.target));\r\n\t\t} catch(e) {\r\n\t\t\t//FIXME improve error message for contract errors\r\n\t\t\tsetError(e.message);\r\n\t\t\taudio.error();\r\n\t\t}\r\n\t\tsetLoading(false);\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tif(contract) {\r\n\t\t\tconst interval = setInterval(update, 30000);\r\n\t\t\treturn () => clearInterval(interval);\r\n\t\t}\r\n\t}, [contract]);\r\n\r\n\treturn <>\r\n\t\t<ContractForm address={address} setError={setError} setContract={initContract} />\r\n\t\t<form onSubmit={submit}>\r\n\t\t\t<fieldset disabled={loading || !contract}>\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t<label htmlFor=\"input-balance\" className=\"label\">Balance</label>\r\n\t\t\t\t\t<div className=\"value\">\r\n\t\t\t\t\t\t<input id=\"input-balance\" disabled={true} value={balance >= 0n ? `${format(balance)} ${unit}` : \"\"} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t<label htmlFor=\"input-bet\" className=\"label\">Bet</label>\r\n\t\t\t\t\t<fieldset className=\"value group\" disabled={playing}>\r\n\t\t\t\t\t\t<input ref={bet} id=\"input-bet\" name=\"bet\" spellCheck={false} />\r\n\t\t\t\t\t\t<button type=\"button\" onClick={setMinBet}>Min</button>\r\n\t\t\t\t\t\t<button type=\"button\" onClick={setMaxBet}>Max</button>\r\n\t\t\t\t\t</fieldset>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"row cards-wrapper\">\r\n\t\t\t\t\t<fieldset className=\"cards\" disabled={!playing}>\r\n\t\t\t\t\t\t{cards ?\r\n\t\t\t\t\t\t\tparse(cards).map((value, i) => <Card key={\"\" + i + playing} index={i} value={value} flipped={flipped[i]} />) :\r\n\t\t\t\t\t\t\tArray(5).fill().map((_, i) => <Card key={\"flipped\" + i} index={i} value={0} flipped />)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</fieldset>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t<button type=\"submit\" id=\"play-button\" className={loading ? \"loading\" : \"\"}>\r\n\t\t\t\t\t\t{playing ? \"Draw\" : \"Deal\"}\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t{result && <div className=\"row\">\r\n\t\t\t\t\t<div id=\"result\">\r\n\t\t\t\t\t\t<div>{Results[result.index - 1]}</div>\r\n\t\t\t\t\t\t<div className=\"amount\">+{format(result.payout)} {unit}</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>}\r\n\t\t\t\t{error && <div className=\"row error\">{error}</div>}\r\n\t\t\t</fieldset>\r\n\t\t</form>\r\n\t</>\r\n\r\n}\r\n","export default function Footer({ address }) {\r\n\r\n\tconst ref = (name, address, ...args) => `#${name}${address ? [address, ...args].map(v => \"/\" + v).join(\"\") : \"\"}`;\r\n\r\n\treturn <div className=\"footer-component\">\r\n\t\t<div className=\"links\">\r\n\t\t\t<a href={ref(\"play\", address)}>Play</a>\r\n\t\t\t<a href={ref(\"history\", address, \"1\")}>History</a>\r\n\t\t\t<a href=\"#howtoplay\">How to play</a>\r\n\t\t</div>\r\n\t\t<div className=\"suits\">\r\n\t\t\t<div className=\"suit hearts\" />\r\n\t\t\t<div className=\"suit spades\" />\r\n\t\t\t<div className=\"suit diamonds\" />\r\n\t\t\t<div className=\"suit clubs\" />\r\n\t\t</div>\r\n\t</div>\r\n}\r\n","import { useEffect, useState } from \"react\";\nimport History from \"./components/History\";\nimport Play from \"./components/Play\";\nimport Footer from \"./components/Footer\";\n\nexport default function App() {\n\n\tfunction parse() {\n\t\treturn window.location.hash.substr(1).split(\"/\");\n\t}\n\n\tconst [ page, setPage ] = useState(parse());\n\n\tuseEffect(() => {\n\t\tconst fn = () => setPage(parse());\n\t\twindow.addEventListener(\"hashchange\", fn);\n\t\treturn () => window.removeEventListener(\"hashchange\", fn);\n\t});\n\n\treturn <>\n\t\t<div id=\"title\">videopoker-dapp</div>\n\t\t<div className=\"app-component\">\n\t\t\t{page[0] === \"history\" ?\n\t\t\t\t<History address={page[1]} page={page[2]} /> :\n\t\t\t\t<Play address={page[1]} resume={page[2]} />}\n\t\t</div>\n\t\t<Footer address={page[1]} />\n\t</>\n\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n"],"sourceRoot":""}